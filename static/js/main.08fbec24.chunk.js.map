{"version":3,"sources":["components/utilities/Vaalidators.jsx","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","redux/dialogs-reducer.jsx","components/Dialogs/Messagess/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Messagess/Messages.jsx","components/Dialogs/Messagess/MessagesConteiner.jsx","HOC/WithAuthRedirect.jsx","components/Dialogs/Dialogs.jsx","api/api.jsx","redux/findUsersReducer.jsx","components/FindUsers/Users/Pagination/Pagination.jsx","Preloader.jsx","components/FindUsers/Users/Users.jsx","redux/users-selectors.jsx","components/FindUsers/FindUsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/common/FormsControls.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/AddNewPost/AddNewPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.jsx","App.jsx","redux/redux-store.jsx","index.js"],"names":["maxLength","Navbar","className","activeClassName","to","connect","state","dialogs","dialogsReducer","DialogsData","props","map","el","key","id","name","initislState","MessagesData","message","AddMessageResuxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Messages","event","onSendMessageCLick","messageBody","MessagesContainer","type","mapStateToPropsForRedirect","isAuth","authReducer","WithAuthRedirect","Component","RedirectComponent","this","React","compose","baseUrl","instance","axios","withCredentials","headers","getUsersRequest","currentPage","pageSize","get","then","response","data","followRequest","post","unFollowRequest","delete","getProfile","getUsersStatus","updateUserStatus","status","put","loginAPI","email","password","rememberMe","savePhotoAPI","file","formData","FormData","append","UsersData","totalCount","portionSize","isFatching","isFollowingProcess","setCurrentPage","toggleIsFatching","toggleIsFollowing","isFollowing","userId","Pagination","pages","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setportionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","onChangePage","Preloader","Users","src","photos","large","alt","followed","unfollow","some","follow","getUsersSelector","findUsersReducer","getPageSizeSelector","getTotalCountSelector","getCurrentPageSelector","getisFatchingSelector","getisFollowingProcessSelector","getPortionSizeSelector","FindUserContainer","pageNumber","getUsersThunkCreator","unfollowClick","followClick","dispatch","a","users","items","resultCode","ProfileStatus","useEffect","setStatus","editMode","setEditMode","isOwner","onChange","currentTarget","value","autoFocus","onBlur","updateStatusThunk","onDoubleClick","TextArea","input","meta","hasError","touched","error","Input","ProfileDataFormREduxForm","ProfileData","profile","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","twitter","instagram","youtube","github","mainLink","ProfileInfo","fullName","aboutMe","target","files","length","savePhotoThunk","htmlFor","initialValues","saveProfileInfoThunk","initalState","setUserStatus","savePhotoSuccess","getProfileThunk","Post","required","maxLength140","AddNewPostResuxForm","validate","MyPosts","memo","addPost","newPostBody","PostData","MyPostsContainer","profileReducer","Profile","ProfileContainer","match","params","authorizedUserId","getStatusThunk","refreshProfile","prevProps","prevState","snapshot","withRouter","Header","login","logoutThunk","setAuthUserData","payload","authMeRequestThunk","HeaderContainer","LoginReduxForm","href","title","loginThunk","messages","stopSubmit","_error","initialized","App","initializeApp","path","render","FindUsersContainer","appReducer","promise","Promise","all","reducer","combineReducers","action","u","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.08fbec24.chunk.js","sourcesContent":["export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = maxLength => {\r\n    return value => {\r\n        if (value.length > maxLength) {\r\n            return `Max length ${maxLength} simbols`\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n};","import React from 'react';\r\nimport './Navbar.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n        <nav className=\"navigation\">\r\n            <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/profile\">Profile</NavLink>\r\n            <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/dialogs\">Message</NavLink>\r\n            {/* <NavLink className=\"navigation__link\" to=\"\">News</NavLink> */}\r\n            {/* <NavLink className=\"navigation__link\" to=\"\">Music</NavLink> */}\r\n            <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/find-users\">Find Users</NavLink>\r\n            {/* <NavLink className=\"navigation__link\" to=\"\">Settings</NavLink> */}\r\n        </nav>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './DialogItem.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    dialogs: state.dialogsReducer.DialogsData,\r\n});\r\n\r\nconst DialogItem = props => {\r\n  return (\r\n      props.dialogs.map(el => (\r\n          <div key={el.id}>\r\n            <NavLink to={\"/dialogs/\" + el.id} activeClassName=\"dialogs__item--active\" className=\"dialogs__item\">{el.name}</NavLink>\r\n          </div>\r\n      ))\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DialogItem);\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nconst initislState = {\r\n    DialogsData: [\r\n        {name: 'Alex', id: 1},\r\n        {name: 'Masha', id: 2},\r\n        {name: 'Pasha', id: 3},\r\n        {name: 'Sasha', id: 4},\r\n    ],\r\n\r\n    MessagesData: [\r\n        {message: 'Hi', id: 1},\r\n        {message: 'It\"s me', id: 2},\r\n        {message: 'HRU', id: 3},\r\n        {message: 'BRB', id: 4},\r\n    ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {message: action.messageBody, id: 6}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const onSendMessageCLick = messageBody => ({\r\n    type: SEND_MESSAGE,\r\n    messageBody,\r\n});\r\n","import React from 'react';\r\nimport './AddMessageForm.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name=\"messageBody\"\r\n                component=\"textarea\"\r\n                className=\"dialog__input\"\r\n                placeholder=\"Enter message\"\r\n            />\r\n            <button className=\"btn btn__new-message\">Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageResuxForm = reduxForm({\r\n    form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default AddMessageResuxForm;","import React from 'react';\r\nimport './Messages.css';\r\nimport AddMessageResuxForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Messages = props => {\r\n    const addNewMessage = event => {\r\n        props.onSendMessageCLick(event.messageBody);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      {props.MessagesData.map(el => (\r\n      <div key={el.message} className=\"dialog__conv\">{el.message}</div>\r\n      ))}\r\n      <AddMessageResuxForm onSubmit={addNewMessage} {...props}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Messages;","import './Messages.css';\r\nimport {\r\n    onSendMessageCLick,\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\n\r\nconst mapStateToProps = state => ({\r\n    MessagesData: state.dialogsReducer.MessagesData,\r\n});\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {\r\n    onSendMessageCLick,\r\n})(Messages);\r\n\r\nexport default MessagesContainer;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nconst WithAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login' />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n\r\nexport default WithAuthRedirect;","import React from 'react';\r\nimport './Dialogs.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessagesContainer from \"./Messagess/MessagesConteiner\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst Dialogs = () => {\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs__items-list\">\r\n        <DialogItem />\r\n      </div>\r\n      <div className=\"dialogs__messages-list\">\r\n        <MessagesContainer />\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n)(Dialogs);\r\n\r\n","import * as axios from \"axios\";\r\n\r\nconst baseUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e7f5a643-78d7-4edd-b331-1591701b245f\",\r\n    }\r\n});\r\n\r\nexport const getUsersRequest = (currentPage, pageSize) => (\r\n    instance.get(`${baseUrl}users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n);\r\n\r\nexport const authMeRequest = () => (\r\n    instance.get(`${baseUrl}auth/me`)\r\n        .then(response => response.data)\r\n);\r\n\r\nexport const followRequest = id => (\r\n    instance.post(`${baseUrl}follow/${id}`)\r\n);\r\n\r\nexport const unFollowRequest = id => (\r\n    instance.delete(`${baseUrl}follow/${id}`)\r\n);\r\n\r\nexport const getProfile = id => (\r\n    instance.get(`${baseUrl}profile/${id}`)\r\n);\r\n\r\nexport const getUsersStatus = id => (\r\n    instance.get(`${baseUrl}profile/status/${id}`)\r\n);\r\n\r\nexport const updateUserStatus = status => (\r\n    instance.put(`${baseUrl}profile/status`, {status: status})\r\n);\r\n\r\nexport const loginAPI = (email, password, rememberMe = false) => (\r\n    instance.post(`${baseUrl}auth/login`, {email, password, rememberMe})\r\n);\r\n\r\nexport const logoutAPI = () => (\r\n    instance.delete(`${baseUrl}auth/login`)\r\n);\r\n\r\nexport const saveProfileInfoAPI = profile => (\r\n    instance.put(`${baseUrl}profile`, profile)\r\n);\r\n\r\nexport const savePhotoAPI = file => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    return instance.put(`${baseUrl}profile/photo`, formData, {\r\n        headers: {\r\n            'Content-type': 'multipart/form-data',\r\n        }\r\n    } )\r\n};\r\n\r\n","import {followRequest, getUsersRequest, unFollowRequest} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_ITEMS_AMOUNT = 'SET_ITEMS_AMOUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FETCHING';\r\n\r\nconst initislState = {\r\n    UsersData: [],\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    portionSize: 10,\r\n    currentPage: 1,\r\n    isFatching: false,\r\n    isFollowingProcess: [],\r\n};\r\n\r\nexport const findUsersReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                UsersData: state.UsersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                UsersData: state.UsersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                UsersData: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case SET_ITEMS_AMOUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFatching: action.isFatching,\r\n            };\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                isFollowingProcess: action.isFollowing\r\n                    ? [...state.isFollowingProcess, action.userId]\r\n                    : state.isFollowingProcess.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followClick = userId => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowClick = userId => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsers = users => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const setCurrentPage = currentPage => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setTotalUsersItem = totalCount => ({\r\n    type: SET_ITEMS_AMOUNT,\r\n    totalCount\r\n});\r\n\r\nexport const toggleIsFatching = isFatching => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFatching\r\n});\r\n\r\nexport const toggleIsFollowing = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING,\r\n    isFollowing,\r\n    userId,\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFatching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        const response = await getUsersRequest(currentPage, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersItem(response.totalCount));\r\n        dispatch(toggleIsFatching(false));\r\n    }\r\n};\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowing(true, id));\r\n        const response = await followRequest(id);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followClick(id));\r\n        }\r\n        dispatch(toggleIsFollowing(false, id));\r\n    };\r\n};\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowing(true, id));\r\n        const response = await unFollowRequest(id);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollowClick(id));\r\n        }\r\n        dispatch(toggleIsFollowing(false, id));\r\n    };\r\n};","import React, {useState} from \"react\";\r\nimport './Pagination.css'\r\n\r\nexport const Pagination = props => {\r\n    const pages = [];\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    const [portionNumber, setportionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div className=\"pagination__list\">\r\n            {portionNumber > 1\r\n                ? <button onClick={() => setportionNumber(portionNumber - 1)} className=\"pagination__list-swipe-btn\">prev</button>\r\n                : <button className=\"pagination__list-swipe-btn--disable\">prev</button>\r\n            }\r\n            <div className=\"pagination__list-wrapper\">\r\n                {pages\r\n                    .filter(el => el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n                    .map(el => (\r\n                        <button key={el} onClick={() => {props.onChangePage(el)}} className={el === props.currentPage ? \"pagination__item-active\" : \"pagination__item\"}>{el}</button>\r\n                    ))}\r\n            </div>\r\n            {portionCount > portionNumber\r\n                ? <button onClick={() => setportionNumber(portionNumber + 1)} className=\"pagination__list-swipe-btn\">next</button>\r\n                : <button className=\"pagination__list-swipe-btn--disable\">next</button>\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport './Preloader.css';\r\n\r\nexport const Preloader = () => (\r\n    <section className=\"animation\">\r\n        <div className=\"cssload-loader\">\r\n            <div className=\"cssload-top\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-bottom\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-left\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-right\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n);","import React from 'react';\r\nimport './Users.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Pagination} from \"./Pagination/Pagination\";\r\nimport {Preloader} from \"../../../Preloader\";\r\n\r\nconst Users = props => {\r\n    return (\r\n        <div className=\"users-list\">\r\n                <Pagination {...props}/>\r\n            {props.isFatching\r\n                ? <Preloader />\r\n                : props.UsersData.map(el => (\r\n                        <div key={el.id} className=\"user\">\r\n                            <div className=\"user__avatar-container\">\r\n                                <NavLink to={\"/profile/\" + el.id}>\r\n                                    <img className=\"user__avatar\" src={el.photos.large ? el.photos.large : \"https://images.pexels.com/photos/3249412/pexels-photo-3249412.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"} alt=\"\"/>\r\n                                </NavLink>\r\n                                {el.followed\r\n                                    ? <button onClick={() => props.unfollow(el.id)} className={props.isFollowingProcess.some(id => id === el.id) ? \"btn user__unfollow-btn-disable\" : \"btn user__unfollow-btn\"}>{props.isFollowingProcess.some(id => id === el.id) ? \"Unfollowing\" : \"Unfollow\"}</button>\r\n                                    : <button onClick={() => props.follow(el.id)} className={props.isFollowingProcess.some(id => id === el.id) ? \"btn user__follow-btn-disable\" : \"btn user__follow-btn\"}>{props.isFollowingProcess.some(id => id === el.id) ? \"Following\" : \"Follow\"}</button>}\r\n                            </div>\r\n                            <div className=\"user__description\">\r\n                                <h3 className=\"user__description-item\">{el.name}</h3>\r\n                                {el.status && <p className=\"user__description-item-status\">{el.status}</p>}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default  Users;","export const getUsersSelector = (state) => {\r\n    return state.findUsersReducer.UsersData;\r\n};\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.findUsersReducer.pageSize;\r\n};\r\n\r\nexport const getTotalCountSelector = (state) => {\r\n    return state.findUsersReducer.totalCount;\r\n};\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.findUsersReducer.currentPage;\r\n};\r\n\r\nexport const getisFatchingSelector = (state) => {\r\n    return state.findUsersReducer.isFatching;\r\n};\r\n\r\nexport const getisFollowingProcessSelector = (state) => {\r\n    return state.findUsersReducer.isFollowingProcess;\r\n};\r\n\r\nexport const getPortionSizeSelector = (state) => {\r\n    return state.findUsersReducer.portionSize;\r\n};\r\n\r\n","import {follow, getUsersThunkCreator, setCurrentPage, unfollow} from \"../../redux/findUsersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React from 'react';\r\nimport Users from \"./Users/Users\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector, getisFatchingSelector, getisFollowingProcessSelector,\r\n    getPageSizeSelector, getPortionSizeSelector,\r\n    getTotalCountSelector,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass FindUserContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onChangePage = pageNumber => {\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n             <Users totalCount={this.props.totalCount} pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage} UsersData={this.props.UsersData}\r\n                    unfollowClick={this.props.unfollowClick} followClick={this.props.followClick}\r\n                    onChangePage={this.onChangePage} isFollowingProcess={this.props.isFollowingProcess}\r\n                    follow={this.props.follow} unfollow={this.props.unfollow}\r\n                    portionSize={this.props.portionSize} isFatching={this.props.isFatching}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UsersData: getUsersSelector(state),\r\n    pageSize: getPageSizeSelector(state),\r\n    totalCount: getTotalCountSelector(state),\r\n    portionSize: getPortionSizeSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    isFatching: getisFatchingSelector(state),\r\n    isFollowingProcess: getisFollowingProcessSelector(state),\r\n});\r\n\r\nexport default  compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        setCurrentPage,\r\n        getUsersThunkCreator,\r\n        follow,\r\n        unfollow,\r\n    }),\r\n)(FindUserContainer);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './ProfileStatus.css';\r\n\r\nexport const ProfileStatus = props => {\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n\r\n        props.updateStatusThunk(status);\r\n    };\r\n\r\n    const onStatusChange = event => {\r\n        setStatus(event.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"personal-information__item personal-information__item-status\">\r\n            {!editMode\r\n                ? props.isOwner\r\n                    ? <div className=\"status__text\" onDoubleClick={activateMode}>{status || \"Double click to change status...\"}</div>\r\n                    : <div className=\"status__text\">{status || \"My status could be here...\"}</div>\r\n                : props.isOwner \r\n                    ? <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateMode} className=\"status__input\" type=\"text\"/>\r\n                    : ''\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport './FormControls.css'\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <textarea {...input} {...props} />\r\n            {hasError && <div className=\"control-error\">{meta.error}</div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <input {...input} {...props} />\r\n            {hasError && <div className=\"control-error\">{meta.error}</div>}\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport {Input, TextArea} from \"../../common/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"personal-information__form\">\r\n            <div className=\"personal-information__form-personal-inf-edit\">\r\n                <div className=\"personal-information__form-field\"><b>Name</b>  <Field className=\"personal-information__input\" placeholder=\"Name\" name=\"fullName\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>Skills</b>  <Field className=\"personal-information__input\"  placeholder=\"looking For A Job Description\" name=\"lookingForAJobDescription\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>Looking for a job</b>  <Field className=\"personal-information__checbox\"  type=\"checkbox\" name=\"lookingForAJob\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>About me</b>  <Field className=\"personal-information__text-area\"  placeholder=\"about me\"  name=\"aboutMe\"  component={TextArea}/></div>\r\n            </div>\r\n            <div className=\"personal-information__form-links-edit\">\r\n                <div className=\"personal-information__form-field\"><b>Facebook</b>  <Field className=\"personal-information__input\"  placeholder=\"Name\" name=\"contacts.facebook\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>Website</b>  <Field className=\"personal-information__input\" placeholder=\"Name\" name=\"contacts.website\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>Twitter</b>  <Field className=\"personal-information__input\" placeholder=\"Name\" name=\"contacts.twitter\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>Instagram</b>  <Field className=\"personal-information__input\" placeholder=\"Name\" name=\"contacts.instagram\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>YouTube</b>  <Field  className=\"personal-information__input\" placeholder=\"Name\" name=\"contacts.youtube\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>GitHub</b>  <Field className=\"personal-information__input\"  placeholder=\"Name\" name=\"contacts.github\"  component={Input}/></div>\r\n                <div className=\"personal-information__form-field\"><b>Main Link</b>  <Field  className=\"personal-information__input\" placeholder=\"Name\" name=\"contacts.mainLink\"  component={Input}/></div>\r\n            </div>\r\n            <button className=\"btn personal-information__edit-btn personal-information__save-btn\">Save</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormREduxForm = reduxForm({\r\n    form: \"edit-profile\",\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormREduxForm;","import React, {useState} from 'react';\r\nimport './ProfileInfo.css'\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataFormREduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const onMainPhotoUpdate = event => {\r\n        if (event.target.files.length) {\r\n            props.savePhotoThunk(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        props.saveProfileInfoThunk(event, props.profile.userId);\r\n        setEditMode(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"main__profile-img\">\r\n                <img className=\"main__img\"\r\n                     src=\"https://www.catsmob.com/post/2012/06/01089/creative_facebook_timeline_covers_023.jpg\"\r\n                     alt=\"\"/>\r\n            </div>\r\n            <div className=\"description\">\r\n                <div className=\"description__wrapper\">\r\n                    <div className=\"avatar\">\r\n                        <img className=\"avatar__img\"\r\n                             src={props.profile.photos.large ? props.profile.photos.large : 'https://images.pexels.com/photos/3249412/pexels-photo-3249412.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'}\r\n                             alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"personal-information\">\r\n                    <div className=\"personal-information__items-presents\">\r\n                        <p className=\"personal-information__item personal-information__name\">{props.profile.fullName}</p>\r\n                    </div>\r\n                        <ProfileStatus {...props}/>\r\n                    <div className=\"personal-information__items-presents\">\r\n                        <p className=\"personal-information__item personal-information__about-me\">{props.profile.aboutMe || \"about me\"}</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {props.isOwner && <><input id=\"load-photo-btn\" className=\"personal-information__load-photo-btn\" onChange={onMainPhotoUpdate} type=\"file\"/><label className=\"personal-information__load-photo-lable\" htmlFor=\"load-photo-btn\">upload new photo</label></>}\r\n                {props.isOwner && <button onClick={() => setEditMode(true)} className=\"btn personal-information__edit-btn\">Edit information</button>}\r\n                {editMode ? <ProfileDataFormREduxForm initialValues={props.profile} onSubmit={handleSubmit} profile={props.profile}/> : <ProfileData {...props}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div className=\"personal-information__items-list-contacts\">\r\n            <p className=\"personal-information__item personal-information__item-loking-for-job\">Looking for a job\r\n                - {profile.lookingForAJob ? \"Yes\" : 'No'}</p>\r\n            <p className=\"personal-information__item personal-information__item-loking-for-job\">Skills\r\n                - {profile.lookingForAJobDescription || \"absent\"}</p>\r\n            <p className={profile.contacts.facebook ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">Facebook</b> - {profile.contacts.facebook ? profile.contacts.facebook: \"absent\"}\r\n            </p>\r\n            <p className={profile.contacts.website ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">Website</b> - {profile.contacts.website ? profile.contacts.website : \"absent\"}</p>\r\n            <p className={profile.contacts.twitter ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">Twitter</b> - {profile.contacts.twitter ? profile.contacts.twitter : \"absent\"}</p>\r\n            <p className={profile.contacts.instagram ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">Instagram</b> - {profile.contacts.instagram ? profile.contacts.instagram : \"absent\"}\r\n            </p>\r\n            <p className={profile.contacts.youtube ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">YouTube</b> - {profile.contacts.youtube ? profile.contacts.youtube : \"absent\"}</p>\r\n            <p className={profile.contacts.github ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">GitHub</b> - {profile.contacts.github ? profile.contacts.github : \"absent\"}</p>\r\n            <p className={profile.contacts.mainLink ? \"personal-information__item-present\" : \"personal-information__item-absent\"}>\r\n                <b className=\"personal-information__bold-text\">Main Link</b> - {profile.contacts.mainLink ? profile.contacts.mainLink : \"absent\"}\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import {getProfile, getUsersStatus, savePhotoAPI, saveProfileInfoAPI, updateUserStatus} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\nconst SAVE_PROFILE = 'SAVE_PROFILE';\r\n\r\nconst initalState = {\r\n        ProfileData: [\r\n            {post: 'Hi'},\r\n            {post: 'How Are U?'},\r\n            {post: 'Where are you from?'},\r\n            {post: 'Happy!'},\r\n        ],\r\n        profile: null,\r\n        status: null,\r\n};\r\n\r\nexport const profileReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                ProfileData: [...state.ProfileData, {post: action.messageBody}],\r\n        };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.file},\r\n            };\r\n        case SAVE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, data: action.file},\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = messageBody => ({\r\n    type: ADD_POST,\r\n    messageBody,\r\n});\r\n\r\nexport const setUserProfile = profile => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const setUserStatus = status => ({\r\n    type: SET_USER_STATUS,\r\n    status,\r\n});\r\n\r\nexport const savePhotoSuccess = file => ({\r\n    type: SAVE_PHOTO,\r\n    file,\r\n});\r\n\r\nexport const saveProfileSuccess = profile => ({\r\n    type: SAVE_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const getProfileThunk = (id) => {\r\n    return async(dispatch) => {\r\n        const response = await getProfile(id);\r\n        dispatch(setUserProfile(response.data));\r\n    };\r\n};\r\n\r\nexport const getStatusThunk = (id) => {\r\n    return async(dispatch) => {\r\n        const response = await getUsersStatus(id);\r\n        dispatch(setUserStatus(response.data));\r\n    };\r\n};\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return async(dispatch) => {\r\n        const response = await updateUserStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    };\r\n};\r\n\r\nexport const savePhotoThunk = (file) => {\r\n    return async(dispatch) => {\r\n        const response = await savePhotoAPI(file);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    };\r\n};\r\n\r\nexport const saveProfileInfoThunk = (data, userId) => {\r\n    return async(dispatch) => {\r\n        const response = await saveProfileInfoAPI(data);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getProfileThunk(userId));\r\n        } \r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport './Post.css';\r\n\r\nconst Post = props => {\r\n  return (\r\n    props.data.map(el => (\r\n      <div key={el.post}>\r\n        <div className=\"post-item\">{el.post}</div>\r\n      </div>\r\n    ))\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './AddNewPost.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utilities/Vaalidators\";\r\nimport {TextArea} from \"../../../../common/FormsControls\";\r\n\r\nconst maxLength140 = maxLengthCreator(140);\r\n\r\nconst AddNewPost = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"new-post\">\r\n                <Field\r\n                    name=\"newPostBody\"\r\n                    component={TextArea}\r\n                    validate={[required, maxLength140]}\r\n                    className=\"new-post__text-area\"\r\n                    placeholder=\"Write post\"\r\n                />\r\n            <button className=\"btn btn__new-post\">New Post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostResuxForm = reduxForm({\r\n    form: \"AddNewPost\",\r\n})(AddNewPost);\r\n\r\nexport default AddNewPostResuxForm;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostResuxForm from \"./Post/AddNewPost/AddNewPost\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const addPost = event => {\r\n        props.addPost(event.newPostBody);\r\n    };\r\n    return (\r\n        <div className=\"main__posts\">\r\n            <AddNewPostResuxForm onSubmit={addPost}/>\r\n            <div className=\"posts-list\">\r\n                <Post data={props.PostData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import './MyPosts.css';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    PostData: state.profileReducer.ProfileData,\r\n});\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport './Profile.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Preloader} from \"../../Preloader\";\r\n\r\nconst Profile = props => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n        <ProfileInfo {...props}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    savePhotoThunk,\r\n    saveProfileInfoThunk,\r\n    updateStatusThunk\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        getProfileThunk,\r\n        getStatusThunk,\r\n        updateStatusThunk,\r\n        savePhotoThunk,\r\n        saveProfileInfoThunk,\r\n    })\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className=\"header\">\r\n          <p className=\"header__login-name\">{props.login}</p>\r\n          <p className=\"header__sign\">social network</p>\r\n          <div className=\"header__login-btn\">\r\n              {props.isAuth\r\n                  ? <NavLink onClick={props.logoutThunk} className=\"header__login-link\" to=\"/login\">Logout</NavLink>\r\n                  : <NavLink  className=\"header__login-link\" to=\"/login\">Login</NavLink>\r\n              }\r\n          </div>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;","import {authMeRequest, loginAPI, logoutAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nconst initislState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nexport const authReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth},\r\n});\r\n\r\nexport const authMeRequestThunk = () => {\r\n    return async (dispatch) => {\r\n        const response = await authMeRequest();\r\n        const {id, email, login} = response.data;\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    };\r\n};\r\n\r\nexport const loginThunk = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        const response = await loginAPI(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMeRequestThunk());\r\n        } else {\r\n            const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    };\r\n};\r\n\r\nexport const logoutThunk = () => {\r\n    return async (dispatch) => {\r\n        const response = await logoutAPI();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunk} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render () {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    login: state.authReducer.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutThunk}) (HeaderContainer);","import React from \"react\";\r\nimport './LoginForm.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls\";\r\nimport {required} from \"../../utilities/Vaalidators\";\r\n\r\nconst LoginForm = props => {\r\n    return (\r\n        <div>\r\n            <h5 className=\"login__sign\">\r\n                To register / log in to the social network, you need to go to the <a className=\"login__link\" href=\"https://social-network.samuraijs.com/login\" title=\"https://social-network.samuraijs.com/login\">registration page</a> , register / log in and go back\r\n            </h5>\r\n            <form onSubmit={props.handleSubmit} className=\"login-form\">\r\n                <div className=\"login-form__item\">\r\n                    <Field validate={[required]} component={Input} name=\"email\" className=\"login-form__item-input\" placeholder=\"Email\"/>\r\n                </div>\r\n                <div className=\"login-form__item\">\r\n                    <Field validate={[required]} component={Input} type=\"password\" name=\"password\" className=\"login-form__item-input\" placeholder=\"Password\"/>\r\n                </div>\r\n                <div className=\"login-form__item login-form__checkbox-wrapper\">\r\n                    <Field component={Input} name=\"rememberMe\" id=\"rememberMe\" className=\"login-form__item-checkbox\" type=\"checkbox\"/><label className=\"login-form__item-label\" htmlFor=\"rememberMe\"> Remember me</label>\r\n                </div>\r\n                <div className=\"login-form__item\">\r\n                    <button className=\"btn login-form__item-btn\">Login</button>\r\n                </div>\r\n                {props.error ? <div className=\"login-form__item-error\">{props.error}</div> : null}\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport './Login.css';\r\nimport LoginResuxForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk, logoutThunk} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = props => {\r\n    const onSubmit = (event) => {\r\n        props.loginThunk(event.email, event.password, event.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n  return (\r\n      <div>\r\n          <LoginResuxForm onSubmit={onSubmit}/>\r\n      </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    loginThunk,\r\n    logoutThunk,\r\n})(Login)","import {authMeRequestThunk} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nconst initislState = {\r\n    initialized: false,\r\n};\r\n\r\nexport const appReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        const promise = dispatch(authMeRequestThunk());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess());\r\n            });\r\n    };\r\n};","import React from 'react';\nimport './App.css';\nimport {Route, withRouter} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport FindUsersContainer from \"./components/FindUsers/FindUsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => <Dialogs/>}/>\n                    <Route path='/find-users' render={() => <FindUsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialized: state.appReducer.initialized,\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {findUsersReducer} from \"./findUsersReducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    findUsersReducer: findUsersReducer,\r\n    authReducer: authReducer,\r\n    form: formReducer,\r\n    appReducer: appReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}