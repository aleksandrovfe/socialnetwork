{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.jsx","redux/dialogs-reducer.tsx","components/Dialogs/Messagess/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Messagess/Messages.jsx","components/Dialogs/Messagess/MessagesConteiner.jsx","HOC/WithAuthRedirect.jsx","api/api.jsx","redux/profile-reducer.tsx","components/Dialogs/Dialogs.jsx","redux/findUsersReducer.tsx","components/FindUsers/Users/Pagination/Pagination.tsx","Preloader.jsx","components/FindUsers/Users/Users.tsx","redux/users-selectors.tsx","components/FindUsers/FindUsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/common/FormsControls.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/MyPosts/Post/Post.jsx","components/Profile/ProfileInfo/MyPosts/Post/AddNewPost/AddNewPost.jsx","components/Profile/ProfileInfo/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/utilities/Vaalidators.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.tsx","App.jsx","redux/redux-store.tsx","index.js"],"names":["connect","state","isAuth","authReducer","props","className","activeClassName","to","dialogs","dialogsReducer","DialogsData","map","el","key","id","name","initialState","MessagesData","message","AddMessageResuxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Messages","event","onSendMessageCLick","messageBody","MessagesContainer","type","mapStateToPropsForRedirect","WithAuthRedirect","Component","RedirectComponent","this","React","baseUrl","instance","axios","withCredentials","headers","getUsersRequest","currentPage","pageSize","get","then","response","data","followRequest","post","unFollowRequest","delete","getProfile","getUsersStatus","updateUserStatus","status","put","loginAPI","email","password","rememberMe","savePhotoAPI","file","formData","FormData","append","initalState","ProfileData","profile","userAvatar","setUserStatus","savePhotoSuccess","getProfileThunk","dispatch","a","getUserAvatarThunk","avatar","photos","large","compose","authorizedUserId","userId","useEffect","UsersData","totalCount","portionSize","isFatching","isFollowingProcess","setCurrentPage","toggleIsFatching","toggleIsFollowing","isFollowing","Pagination","onChangePage","pages","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setportionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","Preloader","Users","unfollow","follow","src","alt","followed","some","getUsersSelector","findUsersReducer","getPageSizeSelector","getTotalCountSelector","getCurrentPageSelector","getisFatchingSelector","getisFollowingProcessSelector","getIdSelector","FindUserContainer","pageNumber","getUsersThunkCreator","isFetching","users","items","resultCode","ProfileStatus","setStatus","editMode","setEditMode","isOwner","onChange","currentTarget","value","autoFocus","onBlur","updateStatusThunk","onDoubleClick","TextArea","input","meta","Input","hasError","touched","error","ProfileDataFormREduxForm","toggle","changeToggle","htmlFor","maxlength","Post","reverse","AddNewPostResuxForm","MyPosts","memo","addPost","newPostBody","PostData","MyPostsContainer","profileReducer","contacts","facebook","website","twitter","instagram","youtube","github","mainLink","ProfileInfo","initialValues","saveProfileInfoThunk","target","files","length","savePhotoThunk","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Profile","ProfileContainer","match","params","getStatusThunk","refreshProfile","prevProps","withRouter","Header","logoutThunk","href","login","setAuthUserData","payload","authMeRequestThunk","required","LoginReduxForm","validate","loginThunk","messages","stopSubmit","_error","initialized","App","initializeApp","path","render","FindUsersContainer","appReducer","promise","Promise","all","reducer","combineReducers","action","Date","now","u","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8ca17073.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype PropType = {\r\n    isAuth: boolean;\r\n}\r\n\r\nconst Navbar: React.FC<PropType> = (props) => {\r\n  return (\r\n    <div>\r\n      {props.isAuth ? (\r\n        <nav className=\"navigation\">\r\n          <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/profile\">\r\n            Profile\r\n          </NavLink>\r\n          <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/dialogs\">\r\n            Message\r\n          </NavLink>\r\n          {/* <NavLink className=\"navigation__link\" to=\"\">News</NavLink> */}\r\n          {/* <NavLink className=\"navigation__link\" to=\"\">Music</NavLink> */}\r\n          <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/find-users\">\r\n            Find Users\r\n          </NavLink>\r\n          {/* <NavLink className=\"navigation__link\" to=\"\">Settings</NavLink> */}\r\n        </nav>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): PropType => ({\r\n  isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Navbar);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './DialogItem.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    dialogs: state.dialogsReducer.DialogsData,\r\n});\r\n\r\nconst DialogItem = props => {\r\n    return (\r\n        props.dialogs.map(el => (\r\n            <div key={el.id}>\r\n                <NavLink to={\"/dialogs/\" + el.id} activeClassName=\"dialogs__item--active\"\r\n                         className=\"dialogs__item-wrapper\">\r\n                    <div className=\"dialogs__item\">{el.name}</div>\r\n                    <div className=\"dialogs__item-last-message\">Hello</div>\r\n                </NavLink>\r\n            </div>\r\n        ))\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DialogItem);\r\n\r\n","import { DialogsDataType, MessagesDataype } from \"../types/types\";\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nconst initialState = {\r\n  DialogsData: [\r\n    { name: \"Alex\", id: 1 },\r\n    { name: \"Masha\", id: 2 },\r\n    { name: \"Pasha\", id: 3 },\r\n    { name: \"Sasha\", id: 4 },\r\n  ] as Array<DialogsDataType>,\r\n\r\n  MessagesData: [\r\n    { message: \"Hi\", id: 1 },\r\n    { message: \"How are you today?\", id: 2 },\r\n    { message: \"Happy new Year\", id: 3 },\r\n    { message: \"Happy Birthday \", id: 4 },\r\n  ] as Array<MessagesDataype>,\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nexport const dialogsReducer = (\r\n  state = initialState,\r\n  action: any\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      return {\r\n        ...state,\r\n        MessagesData: [\r\n          ...state.MessagesData,\r\n          { message: action.messageBody, id: 6 },\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype onSendMessageCLickActionType = {\r\n  type: typeof SEND_MESSAGE;\r\n  messageBody: string;\r\n};\r\n\r\nexport const onSendMessageCLick = (messageBody: string) => ({\r\n  type: SEND_MESSAGE,\r\n  messageBody,\r\n});\r\n","import React from 'react';\r\nimport './AddMessageForm.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"add-message__wrapper\">\r\n            <Field\r\n                name=\"messageBody\"\r\n                component=\"textarea\"\r\n                className=\"dialog__input\"\r\n                placeholder=\"Enter message\"\r\n            />\r\n            <button className=\"btn btn__new-message\">Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageResuxForm = reduxForm({\r\n    form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default AddMessageResuxForm;","import React from 'react';\r\nimport './Messages.css';\r\nimport AddMessageResuxForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Messages = props => {\r\n    const addNewMessage = event => {\r\n        props.onSendMessageCLick(event.messageBody);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialog__wrapper\">\r\n            <div className=\"dialog__background\">\r\n                {props.MessagesData.map(el => (\r\n                    <div key={el.id}>\r\n                        <p className=\"dialog__user-name\">Alex</p>\r\n                        <p key={el.message} className=\"dialog__message\">{el.message}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <AddMessageResuxForm onSubmit={addNewMessage} {...props}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import './Messages.css';\r\nimport {\r\n    onSendMessageCLick,\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\n\r\nconst mapStateToProps = state => ({\r\n    MessagesData: state.dialogsReducer.MessagesData,\r\n});\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {\r\n    onSendMessageCLick,\r\n})(Messages);\r\n\r\nexport default MessagesContainer;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nconst WithAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login' />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n\r\nexport default WithAuthRedirect;","import * as axios from \"axios\";\r\n\r\nconst baseUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e7f5a643-78d7-4edd-b331-1591701b245f\",\r\n    }\r\n});\r\n\r\nexport const getUsersRequest = (currentPage, pageSize) => (\r\n    instance.get(`${baseUrl}users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n);\r\n\r\nexport const authMeRequest = () => (\r\n    instance.get(`${baseUrl}auth/me`)\r\n        .then(response => response.data)\r\n);\r\n\r\nexport const followRequest = id => (\r\n    instance.post(`${baseUrl}follow/${id}`)\r\n);\r\n\r\nexport const unFollowRequest = id => (\r\n    instance.delete(`${baseUrl}follow/${id}`)\r\n);\r\n\r\nexport const getProfile = id => (\r\n    instance.get(`${baseUrl}profile/${id}`)\r\n);\r\n\r\nexport const getUsersStatus = id => (\r\n    instance.get(`${baseUrl}profile/status/${id}`)\r\n);\r\n\r\nexport const updateUserStatus = status => (\r\n    instance.put(`${baseUrl}profile/status`, {status: status})\r\n);\r\n\r\nexport const loginAPI = (email, password, rememberMe = false) => (\r\n    instance.post(`${baseUrl}auth/login`, {email, password, rememberMe})\r\n);\r\n\r\nexport const logoutAPI = () => (\r\n    instance.delete(`${baseUrl}auth/login`)\r\n);\r\n\r\nexport const saveProfileInfoAPI = profile => (\r\n    instance.put(`${baseUrl}profile`, profile)\r\n);\r\n\r\nexport const savePhotoAPI = file => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    return instance.put(`${baseUrl}profile/photo`, formData, {\r\n        headers: {\r\n            'Content-type': 'multipart/form-data',\r\n        }\r\n    })\r\n};\r\n\r\n","import { getProfile, getUsersStatus, savePhotoAPI, saveProfileInfoAPI, updateUserStatus } from \"../api/api\";\r\nimport { ProfileDataType, profileType } from \"../types/types\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\";\r\nconst GET_USER_AVATAR = \"GET_USER_AVATAR\";\r\n\r\nconst initalState = {\r\n  ProfileData: [\r\n    { post: \"Hi\", id: 1 },\r\n    { post: \"How Are U?\", id: 2 },\r\n    { post: \"Where are you from?\", id: 3 },\r\n    { post: \"Happy!\", id: 4 },\r\n  ] as Array<ProfileDataType>,\r\n  profile: null as profileType | null,\r\n  status: null,\r\n  userAvatar: \"\",\r\n};\r\n\r\ntype initalStateType = typeof initalState;\r\n\r\nexport const profileReducer = (state = initalState, action: any): initalStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        ProfileData: [...state.ProfileData, { post: action.messageBody, id: Date.now() }],\r\n      };\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case SET_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n\r\n    case SAVE_PHOTO:\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.file } as profileType,\r\n      };\r\n\r\n    case GET_USER_AVATAR:\r\n      return {\r\n        ...state,\r\n        userAvatar: action.avatar,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype addPostActionType = {\r\n  type: typeof ADD_POST;\r\n  messageBody: string;\r\n};\r\n\r\nexport const addPost = (messageBody: string): addPostActionType => ({\r\n  type: ADD_POST,\r\n  messageBody,\r\n});\r\n\r\ntype setUserProfileActionType = {\r\n  type: typeof SET_USER_PROFILE;\r\n  profile: profileType;\r\n};\r\n\r\nexport const setUserProfile = (profile: profileType): setUserProfileActionType => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\ntype setUserStatusSctionType = {\r\n  type: typeof SET_USER_STATUS;\r\n  status: string;\r\n};\r\n\r\nexport const setUserStatus = (status: string): setUserStatusSctionType => ({\r\n  type: SET_USER_STATUS,\r\n  status,\r\n});\r\n\r\ntype savePhotoSuccessActionType = {\r\n  type: typeof SAVE_PHOTO;\r\n  file: string;\r\n};\r\n\r\nexport const savePhotoSuccess = (file: string): savePhotoSuccessActionType => ({\r\n  type: SAVE_PHOTO,\r\n  file,\r\n});\r\n\r\ntype getUserAvatarActionType = {\r\n  type: typeof GET_USER_AVATAR;\r\n  avatar: string;\r\n};\r\n\r\nexport const getUserAvatar = (avatar: string): getUserAvatarActionType => ({\r\n  type: GET_USER_AVATAR,\r\n  avatar,\r\n});\r\n\r\nexport const getProfileThunk = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    const response = await getProfile(id);\r\n    dispatch(setUserProfile(response.data));\r\n  };\r\n};\r\n\r\nexport const getUserAvatarThunk = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    const response = await getProfile(id);\r\n    dispatch(getUserAvatar(response.data.photos.large));\r\n  };\r\n};\r\n\r\nexport const getStatusThunk = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    const response = await getUsersStatus(id);\r\n    dispatch(setUserStatus(response.data));\r\n  };\r\n};\r\n\r\nexport const updateStatusThunk = (status: string) => {\r\n  return async (dispatch: any) => {\r\n    const response = await updateUserStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setUserStatus(status));\r\n    }\r\n  };\r\n};\r\n\r\nexport const savePhotoThunk = (file: any) => {\r\n  return async (dispatch: any) => {\r\n    const response = await savePhotoAPI(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveProfileInfoThunk = (data: any, userId: number) => {\r\n  return async (dispatch: any) => {\r\n    const response = await saveProfileInfoAPI(data);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getProfileThunk(userId));\r\n    }\r\n  };\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport './Dialogs.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessagesContainer from \"./Messagess/MessagesConteiner\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {getUserAvatarThunk} from '../../redux/profile-reducer';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Dialogs = props => {\r\n    useEffect(() => {\r\n        props.getUserAvatarThunk(props.authorizedUserId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div>\r\n                <DialogItem/>\r\n            </div>\r\n            <div>\r\n                <MessagesContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    authorizedUserId: state.authReducer.userId,\r\n});\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        getUserAvatarThunk,\r\n    })\r\n)(Dialogs);\r\n\r\n","import { followRequest, getUsersRequest, unFollowRequest } from \"../api/api\";\r\nimport { UsersDataType } from \"../types/types\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_ITEMS_AMOUNT = \"SET_ITEMS_AMOUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"TOGGLE_IS_FETCHING\";\r\n\r\nconst initialState = {\r\n  UsersData: [] as Array<UsersDataType>,\r\n  pageSize: 6,\r\n  totalCount: 0,\r\n  portionSize: 10,\r\n  currentPage: 1,\r\n  isFatching: false,\r\n  isFollowingProcess: [] as Array<number>,\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nexport const findUsersReducer = (state = initialState, action: any): initialStateType => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        UsersData: state.UsersData.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n\r\n          return u;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        UsersData: state.UsersData.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n\r\n          return u;\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        UsersData: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_ITEMS_AMOUNT:\r\n      return {\r\n        ...state,\r\n        totalCount: action.totalCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFatching: action.isFatching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING:\r\n      return {\r\n        ...state,\r\n        isFollowingProcess: action.isFollowing\r\n          ? [...state.isFollowingProcess, action.userId]\r\n          : state.isFollowingProcess.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype followClickActionType = {\r\n  type: typeof FOLLOW;\r\n  userId: number;\r\n};\r\n\r\nexport const followClick = (userId: number): followClickActionType => ({\r\n  type: FOLLOW,\r\n  userId,\r\n});\r\n\r\ntype unfollowClickActionType = {\r\n  type: typeof UNFOLLOW;\r\n  userId: number;\r\n};\r\n\r\nexport const unfollowClick = (userId: number): unfollowClickActionType => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n\r\ntype setUsersActionType = {\r\n  type: typeof SET_USERS;\r\n  users: Array<UsersDataType>;\r\n};\r\n\r\nexport const setUsers = (users: Array<UsersDataType>): setUsersActionType => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\ntype setCurrentPageActionType = {\r\n  type: typeof SET_CURRENT_PAGE;\r\n  currentPage: number;\r\n};\r\n\r\nexport const setCurrentPage = (currentPage: number): setCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\ntype setTotalUsersItemActionType = {\r\n  type: typeof SET_ITEMS_AMOUNT;\r\n  totalCount: number;\r\n};\r\n\r\nexport const setTotalUsersItem = (totalCount: number): setTotalUsersItemActionType => ({\r\n  type: SET_ITEMS_AMOUNT,\r\n  totalCount,\r\n});\r\n\r\ntype toggleIsFatchingActionType = {\r\n  type: typeof TOGGLE_IS_FETCHING;\r\n  isFatching: boolean;\r\n};\r\n\r\nexport const toggleIsFatching = (isFatching: boolean): toggleIsFatchingActionType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFatching,\r\n});\r\n\r\ntype toggleIsFollowingActionType = {\r\n  type: typeof TOGGLE_IS_FOLLOWING;\r\n  isFollowing: boolean;\r\n  userId: number;\r\n};\r\n\r\nexport const toggleIsFollowing = (isFollowing: boolean, userId: number): toggleIsFollowingActionType => ({\r\n  type: TOGGLE_IS_FOLLOWING,\r\n  isFollowing,\r\n  userId,\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFatching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    const response = await getUsersRequest(currentPage, pageSize);\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersItem(response.totalCount));\r\n    dispatch(toggleIsFatching(false));\r\n  };\r\n};\r\n\r\nexport const follow = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFollowing(true, id));\r\n    const response = await followRequest(id);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(followClick(id));\r\n    }\r\n    dispatch(toggleIsFollowing(false, id));\r\n  };\r\n};\r\n\r\nexport const unfollow = (id: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFollowing(true, id));\r\n    const response = await unFollowRequest(id);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(unfollowClick(id));\r\n    }\r\n    dispatch(toggleIsFollowing(false, id));\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\ntype PropsType = {\r\n  totalCount: number;\r\n  pageSize: number;\r\n  portionSize?: number;\r\n  currentPage: number;\r\n  onChangePage: (pageNumber: number) => void;\r\n};\r\n\r\nexport const Pagination: React.FC<PropsType> = ({ totalCount, pageSize, portionSize = 10, onChangePage, currentPage }) => {\r\n  const pages = [];\r\n  let pagesCount = Math.ceil(totalCount / pageSize);\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  const [portionNumber, setportionNumber] = useState(1);\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className=\"pagination__list\">\r\n      {portionNumber > 1 ? (\r\n        <button onClick={() => setportionNumber(portionNumber - 1)} className=\"pagination__list-swipe-btn-prev\">\r\n          prev\r\n        </button>\r\n      ) : (\r\n        <button className=\"pagination__list-swipe-btn-prev--disable\">prev</button>\r\n      )}\r\n      <div className=\"pagination__list-wrapper\">\r\n        {pages\r\n          .filter((el) => el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n          .map((el) => (\r\n            <button\r\n              key={el}\r\n              onClick={() => {\r\n                onChangePage(el);\r\n              }}\r\n              className={el === currentPage ? \"pagination__item-active\" : \"pagination__item\"}\r\n            >\r\n              {el}\r\n            </button>\r\n          ))}\r\n      </div>\r\n      {portionCount > portionNumber ? (\r\n        <button onClick={() => setportionNumber(portionNumber + 1)} className=\"pagination__list-swipe-btn-next\">\r\n          next\r\n        </button>\r\n      ) : (\r\n        <button className=\"pagination__list-swipe-btn-next--disable\">next</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './Preloader.css';\r\n\r\nexport const Preloader = () => (\r\n    <section className=\"animation\">\r\n        <div className=\"cssload-loader\">\r\n            <div className=\"cssload-top\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-bottom\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-left\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-right\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n);","import React from \"react\";\r\nimport \"./Users.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Pagination } from \"./Pagination/Pagination\";\r\nimport { Preloader } from \"../../../Preloader\";\r\nimport { UsersDataType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n  isFatching: boolean;\r\n  UsersData: Array<UsersDataType>;\r\n  isFollowingProcess: Array<number>;\r\n  totalCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onChangePage: (pageNumber: number) => void;\r\n  unfollow: (id: number) => void;\r\n  follow: (id: number) => void;\r\n};\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n  isFatching,\r\n  UsersData,\r\n  unfollow,\r\n  follow,\r\n  isFollowingProcess,\r\n  totalCount,\r\n  pageSize,\r\n  onChangePage,\r\n  currentPage,\r\n}) => {\r\n  return isFatching ? (\r\n    <Preloader />\r\n  ) : (\r\n    <div className=\"users-list\">\r\n      {UsersData.map((el) => (\r\n        <div key={el.id} className=\"user\">\r\n          <NavLink to={\"/profile/\" + el.id}>\r\n            <img\r\n              className=\"user__avatar\"\r\n              src={\r\n                el.photos.large\r\n                  ? el.photos.large\r\n                  : \"https://m2bob-forum.net/wcf/images/avatars/3e/2720-3e546be0b0701e0cb670fa2f4fcb053d4f7e1ba5.jpg\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </NavLink>\r\n          <div className=\"user__description\">\r\n            <h3 className=\"user__description-item\">{el.name}</h3>\r\n            {el.status && <p className=\"user__description-item-status\">{el.status}</p>}\r\n          </div>\r\n          {el.followed ? (\r\n            <button\r\n              onClick={() => unfollow(el.id)}\r\n              className={\r\n                isFollowingProcess.some((id) => id === el.id)\r\n                  ? \"btn user__unfollow-btn-disable\"\r\n                  : \"btn user__unfollow-btn\"\r\n              }\r\n            >\r\n              {isFollowingProcess.some((id) => id === el.id) ? \"Unfollowing\" : \"Unfollow\"}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => follow(el.id)}\r\n              className={\r\n                isFollowingProcess.some((id) => id === el.id) ? \"btn user__follow-btn-disable\" : \"btn user__follow-btn\"\r\n              }\r\n            >\r\n              {isFollowingProcess.some((id) => id === el.id) ? \"Following\" : \"Follow\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <Pagination totalCount={totalCount} pageSize={pageSize} onChangePage={onChangePage} currentPage={currentPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { AppStateType } from \"./redux-store\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.findUsersReducer.UsersData;\r\n};\r\n\r\nexport const getPageSizeSelector = (state: AppStateType) => {\r\n    return state.findUsersReducer.pageSize;\r\n};\r\n\r\nexport const getTotalCountSelector = (state: AppStateType) => {\r\n    return state.findUsersReducer.totalCount;\r\n};\r\n\r\nexport const getCurrentPageSelector = (state: AppStateType) => {\r\n    return state.findUsersReducer.currentPage;\r\n};\r\n\r\nexport const getisFatchingSelector = (state: AppStateType) => {\r\n    return state.findUsersReducer.isFatching;\r\n};\r\n\r\nexport const getisFollowingProcessSelector = (state: AppStateType) => {\r\n    return state.findUsersReducer.isFollowingProcess;\r\n};\r\n\r\n\r\nexport const getIdSelector = (state: AppStateType) => {\r\n    return state.authReducer.userId;\r\n};","import { follow, getUsersThunkCreator, setCurrentPage, unfollow } from \"../../redux/findUsersReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport Users from \"./Users/Users\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPageSelector,\r\n  getisFatchingSelector,\r\n  getisFollowingProcessSelector,\r\n  getPageSizeSelector,\r\n  getTotalCountSelector,\r\n  getUsersSelector,\r\n  getIdSelector,\r\n} from \"../../redux/users-selectors\";\r\nimport { getUserAvatarThunk } from \"../../redux/profile-reducer\";\r\nimport { UsersDataType } from \"../../types/types\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype MapDispatchToPropsType = {\r\n  unfollow: (id: number) => void;\r\n  follow: (id: number) => void;\r\n  getUsersThunkCreator: (currentPage: number, pageSize: number) => void;\r\n  getUserAvatarThunk: (authorizedUserId: number) => void;\r\n  setCurrentPage: (pageNumber: number) => void;\r\n};\r\n\r\ntype MapStateToPropsType = {\r\n  authorizedUserId: number;\r\n  UsersData: Array<UsersDataType>;\r\n  isFollowingProcess: Array<number>;\r\n  totalCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  isFetching: boolean;\r\n};\r\n\r\ntype OwnPropsType = {\r\n  onChangePage: (pageNumber: number) => void;\r\n};\r\n\r\ntype PropsType = MapDispatchToPropsType & MapStateToPropsType & OwnPropsType;\r\n\r\nclass FindUserContainer extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    this.props.getUserAvatarThunk(this.props.authorizedUserId);\r\n  }\r\n\r\n  onChangePage = (pageNumber: number) => {\r\n    this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Users\r\n          isFatching={this.props.isFetching}\r\n          UsersData={this.props.UsersData}\r\n          unfollow={this.props.unfollow}\r\n          follow={this.props.follow}\r\n          isFollowingProcess={this.props.isFollowingProcess}\r\n          totalCount={this.props.totalCount}\r\n          pageSize={this.props.pageSize}\r\n          onChangePage={this.onChangePage}\r\n          currentPage={this.props.currentPage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n  UsersData: getUsersSelector(state),\r\n  pageSize: getPageSizeSelector(state),\r\n  totalCount: getTotalCountSelector(state),\r\n  currentPage: getCurrentPageSelector(state),\r\n  isFetching: getisFatchingSelector(state),\r\n  isFollowingProcess: getisFollowingProcessSelector(state),\r\n  authorizedUserId: getIdSelector(state),\r\n});\r\n\r\nexport default compose(\r\n  WithAuthRedirect,\r\n  connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    setCurrentPage,\r\n    getUsersThunkCreator,\r\n    follow,\r\n    unfollow,\r\n    getUserAvatarThunk,\r\n  })\r\n)(FindUserContainer);\r\n","import React, { useEffect, useState, ChangeEventHandler, ChangeEvent } from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\ntype PropsType = {\r\n  status: string;\r\n  isOwner: boolean;\r\n  updateStatusThunk: (status: string) => void;\r\n};\r\n\r\nexport const ProfileStatus: React.FC<PropsType> = (props) => {\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateMode = () => {\r\n    setEditMode(false);\r\n\r\n    props.updateStatusThunk(status);\r\n  };\r\n\r\n  const onStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"personal-information__item personal-information__item-status\">\r\n      {!editMode ? (\r\n        props.isOwner ? (\r\n          <div className=\"status__text\" onDoubleClick={activateMode}>\r\n            {status || \"Double click to change status...\"}\r\n          </div>\r\n        ) : (\r\n          <div className=\"status__text\">{status || \"My status could be here...\"}</div>\r\n        )\r\n      ) : props.isOwner ? (\r\n        <input\r\n          onChange={onStatusChange}\r\n          autoFocus={true}\r\n          value={status}\r\n          onBlur={deactivateMode}\r\n          className=\"status__input\"\r\n          type=\"text\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './FormControls.css'\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <textarea {...input} {...props} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        hasError\r\n            ? <div className=\"controlled-input__error\">\r\n                <input  {...input} {...props} />\r\n                {hasError && <div className=\"controlled-error\">{meta.error}</div>}\r\n            </div>\r\n            : <div className=\"controlled-input\">\r\n                <input  {...input} {...props} />\r\n            </div>\r\n    )\r\n};","import React, {useState} from 'react';\r\nimport {Input, TextArea} from \"../../common/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit}) => {\r\n    const [toggle, changeToggle] = useState(true);\r\n\r\n    const handleToggleClick = () => {\r\n        changeToggle(!toggle)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"personal-information__form\">\r\n            <div className=\"personal-information__background\"/>\r\n            <div className=\"personal-information__form-wrapper\">\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-name\" className=\"personal-information__form-label\">Name and surname</label>\r\n                    <Field id=\"form-name\" className=\"personal-information__input\" placeholder=\"Name\" name=\"fullName\"\r\n                           component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-skills\" className=\"personal-information__form-label\">Skills</label>\r\n                    <Field maxlength=\"100\" id=\"form-skills\" className=\"personal-information__input\"\r\n                           placeholder=\"looking For A Job Description\" name=\"lookingForAJobDescription\"\r\n                           component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <Field id=\"form-lookingForAJob\" className=\"personal-information__checbox\" type=\"checkbox\"\r\n                           name=\"lookingForAJob\" component={Input}/>\r\n                    <label onClick={handleToggleClick} htmlFor=\"form-lookingForAJob\"\r\n                           className={toggle ? \"personal-information__form-label--not-checked\" : \"personal-information__form-label--checked\"}>I\r\n                        am looking for a job</label>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-aboutMe\" className=\"personal-information__form-label\">About me</label>\r\n                    <Field maxlength=\"150\" id=\"form-aboutMe\" className=\"personal-information__text-area\"\r\n                           placeholder=\"Write about yourself\" name=\"aboutMe\" component={TextArea}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-facebook\" className=\"personal-information__form-label\">Facebook</label>\r\n                    <Field id=\"form-facebook\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.facebook\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-website\" className=\"personal-information__form-label\">Website</label>\r\n                    <Field id=\"form-website\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.website\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-twitter\" className=\"personal-information__form-label\">Twitter</label>\r\n                    <Field id=\"form-twitter\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.twitter\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-instagram\" className=\"personal-information__form-label\">Instagram</label>\r\n                    <Field id=\"form-instagram\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.instagram\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-youTube\" className=\"personal-information__form-label\">YouTube</label>\r\n                    <Field id=\"form-youTube\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.youtube\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-gitHub\" className=\"personal-information__form-label\">GitHub</label>\r\n                    <Field id=\"form-gitHub\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.github\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-mainLink\" className=\"personal-information__form-label\">Main Link</label>\r\n                    <Field id=\"form-mainLink\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.mainLink\" component={Input}/>\r\n                </div>\r\n                <button className=\"btn personal-information__save-btn\">Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormREduxForm = reduxForm({\r\n    form: \"edit-profile\",\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormREduxForm;","import React from \"react\";\r\nimport \"./Post.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <p className=\"posts__sign\">Posts</p>\r\n      <div className=\"posts-list\">\r\n        {[...props.data].reverse().map((el) => (\r\n          <div key={el.id}>\r\n            <div className=\"post-item\">{el.post}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport './AddNewPost.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../../../../common/FormsControls\";\r\n\r\nconst AddNewPost = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"new-post\">\r\n            <Field\r\n                name=\"newPostBody\"\r\n                component={TextArea}\r\n                className=\"new-post__text-area\"\r\n                placeholder=\"Write post\"\r\n                type=\"text\" maxlength=\"200\"\r\n            />\r\n            <button className=\"btn btn__new-post\">New Post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostResuxForm = reduxForm({\r\n    form: \"AddNewPost\",\r\n})(AddNewPost);\r\n\r\nexport default AddNewPostResuxForm;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostResuxForm from \"./Post/AddNewPost/AddNewPost\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const addPost = event => {\r\n        props.addPost(event.newPostBody);\r\n    };\r\n    return (\r\n        <div className=\"main__posts\">\r\n            <AddNewPostResuxForm onSubmit={addPost}/>\r\n            <div className=\"posts-list\">\r\n                <Post data={props.PostData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import './MyPosts.css';\r\nimport {addPost} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    PostData: state.profileReducer.ProfileData,\r\n});\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState} from 'react';\r\nimport './ProfileInfo.css'\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataFormREduxForm from \"./ProfileDataForm\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst ProfileInfo = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const onMainPhotoUpdate = event => {\r\n        if (event.target.files.length) {\r\n            props.savePhotoThunk(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        props.saveProfileInfoThunk(event, props.profile.userId);\r\n        setEditMode(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? <ProfileDataFormREduxForm initialValues={props.profile} onSubmit={handleSubmit}\r\n                                                  profile={props.profile}/> : null}\r\n            <div className=\"main__profile-img\">\r\n                <img className=\"main__img\"\r\n                     src=\"https://images.pexels.com/photos/1726964/pexels-photo-1726964.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                     alt=\"\"/>\r\n            </div>\r\n            <div className=\"description\">\r\n                <div className=\"description__wrapper\">\r\n                    <div className=\"avatar\">\r\n                        <img className=\"avatar__img\"\r\n                             src={props.profile.photos.large ? props.profile.photos.large : 'https://m2bob-forum.net/wcf/images/avatars/3e/2720-3e546be0b0701e0cb670fa2f4fcb053d4f7e1ba5.jpg'}\r\n                             alt=\"\"/>\r\n                        {props.isOwner && <><input id=\"load-photo-btn\" className=\"personal-information__load-photo-btn\"\r\n                                                   onChange={onMainPhotoUpdate} type=\"file\"/><label\r\n                            className=\"personal-information__load-photo-lable\" htmlFor=\"load-photo-btn\">Upload new\r\n                            photo</label></>}\r\n                    </div>\r\n                    <div className=\"personal-information\">\r\n                        <div className=\"personal-information__items-presents\">\r\n                            <p className=\"personal-information__item personal-information__name\">{props.profile.fullName}</p>\r\n                            {props.isOwner && <button onClick={() => setEditMode(true)}\r\n                                                      className=\"btn personal-information__edit-btn\">Edit\r\n                                information</button>}\r\n                        </div>\r\n                        <ProfileStatus {...props}/>\r\n                        <div className=\"personal-information__job-wrapper\">\r\n                            <p className={props.profile.lookingForAJob ? \"personal-information__loking-for-job\" : \"personal-information__item-not-loking-for-job\"}>{props.profile.lookingForAJob ? \"Looking for a job\" : \"Not looking for a job\"}</p>\r\n                            <p className=\"personal-information__item-skills\"><p\r\n                                className=\"personal-information__item-skills-sign\">Skills:</p> {props.profile.lookingForAJobDescription || \"absent\"}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"personal-information__links-posts-wrapper\">\r\n                    <div>\r\n                        <div className=\"personal-information__about-me\"><p\r\n                            className=\"personal-information__about-me-sign\">About\r\n                            me</p>{props.profile.aboutMe || \"Information about myself...\"}</div>\r\n                        <ProfileData {...props}/>\r\n                    </div>\r\n                    <MyPostsContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div className=\"personal-information__items-list-contacts\">\r\n            <p className=\"personal-information__items-list-contacts-sign\">Links</p>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Facebook</p> - {profile.contacts.facebook ? profile.contacts.facebook : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Website</p> - {profile.contacts.website ? profile.contacts.website : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Twitter</p> - {profile.contacts.twitter ? profile.contacts.twitter : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Instagram</p> - {profile.contacts.instagram ? profile.contacts.instagram : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">YouTube</p> - {profile.contacts.youtube ? profile.contacts.youtube : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">GitHub</p> - {profile.contacts.github ? profile.contacts.github : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Main\r\n                    Link</p> - {profile.contacts.mainLink ? profile.contacts.mainLink : \"absent\"}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport './Profile.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {Preloader} from \"../../Preloader\";\r\n\r\nconst Profile = props => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <ProfileInfo {...props}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    savePhotoThunk,\r\n    saveProfileInfoThunk,\r\n    updateStatusThunk,\r\n    getUserAvatarThunk,\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        this.props.getUserAvatarThunk(this.props.authorizedUserId)\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        getProfileThunk,\r\n        getStatusThunk,\r\n        updateStatusThunk,\r\n        savePhotoThunk,\r\n        saveProfileInfoThunk,\r\n        getUserAvatarThunk,\r\n    })\r\n)(ProfileContainer);\r\n\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  userAvatar: string;\r\n  isAuth: boolean;\r\n  logoutThunk: () => void;\r\n};\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__wrapper\" />\r\n      <NavLink className=\"header__sign\" to=\"/profile\">\r\n        Social Network\r\n      </NavLink>\r\n      <div className=\"header__user-auth\">\r\n        {props.isAuth ? <img className=\"header__avatar\" src={props.userAvatar} alt=\"\" /> : \"\"}\r\n        <div className=\"header__sign-btn\">\r\n          {props.isAuth ? (\r\n            <NavLink onClick={props.logoutThunk} className=\"header__sign-link\" to=\"/login\">\r\n              Logout\r\n            </NavLink>\r\n          ) : (\r\n            <>\r\n              <NavLink className=\"header__sign-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <a\r\n                className=\"header__sign-link header__sign-link-sign-up\"\r\n                href=\"https://social-network.samuraijs.com/login\"\r\n              >\r\n                Sign up\r\n              </a>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { authMeRequest, loginAPI, logoutAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = \"SET_AUTH_USER_DATA\";\r\n\r\nconst initialState = {\r\n  userId: 0,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nexport const authReducer = (state = initialState, action: any): initialStateType => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype setAuthUserDataActionPayloadType = {\r\n  userId: number | null;\r\n  email: string | null;\r\n  login: string | null;\r\n  isAuth: boolean | null;\r\n};\r\n\r\ntype setAuthUserDataActionType = {\r\n  type: typeof SET_AUTH_USER_DATA;\r\n  payload: setAuthUserDataActionPayloadType;\r\n};\r\n\r\nexport const setAuthUserData = (\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean | null\r\n): setAuthUserDataActionType => ({\r\n  type: SET_AUTH_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const authMeRequestThunk = () => {\r\n  return async (dispatch: any) => {\r\n    const response = await authMeRequest();\r\n    const { id, email, login } = response.data;\r\n    if (response.resultCode === 0) {\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean) => {\r\n  return async (dispatch: any) => {\r\n    const response = await loginAPI(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(authMeRequestThunk());\r\n    } else {\r\n      const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutThunk = () => {\r\n  return async (dispatch: any) => {\r\n    const response = await logoutAPI();\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutThunk } from \"../../redux/auth-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype MapDispatchType = {\r\n  logoutThunk: () => void;\r\n};\r\n\r\ntype MapStateType = {\r\n  userAvatar: string;\r\n  isAuth: boolean;\r\n  login: null | string;\r\n};\r\n\r\ntype OwnType = {};\r\n\r\ntype PropType = MapStateType & MapDispatchType & OwnType;\r\n\r\nconst HeaderContainer: React.FC<PropType> = (props) => {\r\n  return <Header {...props} />;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateType => ({\r\n  userAvatar: state.profileReducer.userAvatar,\r\n  isAuth: state.authReducer.isAuth,\r\n  login: state.authReducer.login,\r\n});\r\n\r\nexport default connect<MapStateType, MapDispatchType, OwnType, AppStateType>(mapStateToProps, { logoutThunk })(\r\n  HeaderContainer\r\n);\r\n","export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = maxLength => {\r\n    return value => {\r\n        if (value.length > maxLength) {\r\n            return `Max length ${maxLength} simbols`\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport './LoginForm.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls\";\r\nimport {required} from \"../../utilities/Vaalidators\";\r\n\r\nconst LoginForm = props => {\r\n    const [toggle, changeToggle] = useState(true);\r\n\r\n    const handleToggleClick = () => {\r\n        changeToggle(!toggle)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"login-form__background\"/>\r\n            <form onSubmit={props.handleSubmit} className=\"login-form\">\r\n                <div className=\"login-form__wrapper\">\r\n                    <h2 className=\"login-form__sign\">Login to your account</h2>\r\n                    <div className=\"login-form__item\">\r\n                        <Field validate={[required]} component={Input} name=\"email\"\r\n                               className={props.error && props.error === \"Enter valid Email\" ? \"login-form__item-input-error\" : \"login-form__item-input\"}\r\n                               placeholder=\"Email\"/>\r\n                        {props.error && props.error === \"Enter valid Email\" ?\r\n                            <div className=\"login-form__item-error-email\">{props.error}</div> : null}\r\n                    </div>\r\n                    <div className=\"login-form__item\">\r\n                        <Field validate={[required]} component={Input} type=\"password\" name=\"password\"\r\n                               className=\"login-form__item-input\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div className=\"login-form__item login-form__checkbox-wrapper\">\r\n                        <Field component={Input} name=\"rememberMe\" id=\"rememberMe\" className=\"login-form__item-checkbox\"\r\n                               type=\"checkbox\"/><label onClick={handleToggleClick}\r\n                                                       className={toggle ? \"login-form__item-label\" : \"login-form__item-label--checked\"}\r\n                                                       htmlFor=\"rememberMe\"> Remember me</label>\r\n                    </div>\r\n                    {props.error && props.error !== \"Enter valid Email\" ?\r\n                        <div className=\"login-form__item-error\">{props.error}</div> : null}\r\n                    <div className=\"login-form__item\">\r\n                        <button className=\"btn login-form__item-btn\">Login</button>\r\n                    </div>\r\n                    <p>or</p>\r\n                    <div className=\"login-form__item\">\r\n                        <a href=\"https://social-network.samuraijs.com/login\"\r\n                           className=\"btn login-form__item-btn login-form__item-btn-sign-up\">Sign up</a>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport './Login.css';\r\nimport LoginResuxForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk, logoutThunk} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = props => {\r\n    const onSubmit = (event) => {\r\n        props.loginThunk(event.email, event.password, event.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginResuxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    loginThunk,\r\n    logoutThunk,\r\n})(Login)","import { authMeRequestThunk } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nexport const appReducer = (\r\n  state = initialState,\r\n  action: any\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype initializedSuccessActionType = {\r\n  type: typeof INITIALIZED_SUCCESS;\r\n};\r\n\r\nexport const initializedSuccess = (): initializedSuccessActionType => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch: any) => {\r\n    const promise = dispatch(authMeRequestThunk());\r\n    Promise.all([promise]).then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport FindUsersContainer from \"./components/FindUsers/FindUsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport { Preloader } from \"./Preloader\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/dialogs\" render={() => <Dialogs />} />\r\n          <Route path=\"/find-users\" render={() => <FindUsersContainer />} />\r\n          <Route path=\"/login\" render={() => <Login />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.appReducer.initialized,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    initializeApp,\r\n  })\r\n)(App);\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport { dialogsReducer } from \"./dialogs-reducer\";\r\nimport { findUsersReducer } from \"./findUsersReducer\";\r\nimport { authReducer } from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { appReducer } from \"./app-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n  profileReducer: profileReducer,\r\n  dialogsReducer: dialogsReducer,\r\n  findUsersReducer: findUsersReducer,\r\n  authReducer: authReducer,\r\n  form: formReducer,\r\n  appReducer: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n      \r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}