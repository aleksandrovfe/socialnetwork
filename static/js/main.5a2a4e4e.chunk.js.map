{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","redux/dialogs-reducer.jsx","components/Dialogs/Messagess/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Messagess/Messages.jsx","components/Dialogs/Messagess/MessagesConteiner.jsx","HOC/WithAuthRedirect.jsx","api/api.jsx","redux/profile-reducer.jsx","components/Dialogs/Dialogs.jsx","redux/findUsersReducer.jsx","components/FindUsers/Users/Pagination/Pagination.jsx","Preloader.jsx","components/FindUsers/Users/Users.jsx","redux/users-selectors.jsx","components/FindUsers/FindUsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/common/FormsControls.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/MyPosts/Post/Post.jsx","components/Profile/ProfileInfo/MyPosts/Post/AddNewPost/AddNewPost.jsx","components/Profile/ProfileInfo/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.jsx","components/Header/HeaderContainer.jsx","components/utilities/Vaalidators.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.jsx","App.jsx","redux/redux-store.jsx","index.js"],"names":["connect","state","isAuth","authReducer","props","className","activeClassName","to","dialogs","dialogsReducer","DialogsData","map","el","key","id","name","initislState","MessagesData","message","AddMessageResuxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Messages","event","onSendMessageCLick","messageBody","MessagesContainer","type","mapStateToPropsForRedirect","WithAuthRedirect","Component","RedirectComponent","this","React","baseUrl","instance","axios","withCredentials","headers","getUsersRequest","currentPage","pageSize","get","then","response","data","followRequest","post","unFollowRequest","delete","getProfile","getUsersStatus","updateUserStatus","status","put","loginAPI","email","password","rememberMe","savePhotoAPI","file","formData","FormData","append","initalState","ProfileData","profile","userAvatar","setUserStatus","savePhotoSuccess","getProfileThunk","dispatch","a","getUserAvatarThunk","avatar","photos","large","compose","authorizedUserId","userId","useEffect","UsersData","totalCount","portionSize","isFatching","isFollowingProcess","setCurrentPage","toggleIsFatching","toggleIsFollowing","isFollowing","Pagination","pages","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setportionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","onChangePage","Preloader","Users","src","alt","followed","unfollow","some","follow","getUsersSelector","findUsersReducer","getPageSizeSelector","getTotalCountSelector","getCurrentPageSelector","getisFatchingSelector","getisFollowingProcessSelector","getPortionSizeSelector","getIdSelector","FindUserContainer","pageNumber","getUsersThunkCreator","users","items","resultCode","ProfileStatus","setStatus","editMode","setEditMode","isOwner","onChange","currentTarget","value","autoFocus","onBlur","updateStatusThunk","onDoubleClick","TextArea","input","meta","Input","hasError","touched","error","ProfileDataFormREduxForm","toggle","changeToggle","htmlFor","maxlength","Post","AddNewPostResuxForm","MyPosts","memo","addPost","newPostBody","PostData","MyPostsContainer","profileReducer","contacts","facebook","website","twitter","instagram","youtube","github","mainLink","ProfileInfo","initialValues","saveProfileInfoThunk","target","files","length","savePhotoThunk","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Profile","ProfileContainer","match","params","getStatusThunk","refreshProfile","prevProps","withRouter","Header","logoutThunk","href","login","setAuthUserData","payload","authMeRequestThunk","required","LoginReduxForm","validate","loginThunk","messages","stopSubmit","_error","initialized","App","initializeApp","path","render","FindUsersContainer","appReducer","promise","Promise","all","reducer","combineReducers","action","u","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"mpBA4BeA,eAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,YAAYD,UAGU,GAAzBF,EAvBA,SAAAI,GACX,OACI,6BACKA,EAAMF,OACD,yBAAKG,UAAU,cACb,kBAAC,IAAD,CAASA,UAAU,mBAAmBC,gBAAgB,cAAcC,GAAG,YAAvE,WACA,kBAAC,IAAD,CAASF,UAAU,mBAAmBC,gBAAgB,cAAcC,GAAG,YAAvE,WAGA,kBAAC,IAAD,CAASF,UAAU,mBAAmBC,gBAAgB,cAAcC,GAAG,eAAvE,eAIF,OCKHP,G,cAAAA,aAlBS,SAAAC,GAAK,MAAK,CAC9BO,QAASP,EAAMQ,eAAeC,eAiBM,KAAzBV,EAdI,SAAAI,GACf,OACIA,EAAMI,QAAQG,KAAI,SAAAC,GAAE,OAChB,yBAAKC,IAAKD,EAAGE,IACT,kBAAC,IAAD,CAASP,GAAI,YAAcK,EAAGE,GAAIR,gBAAgB,wBACzCD,UAAU,yBACf,yBAAKA,UAAU,iBAAiBO,EAAGG,MACnC,yBAAKV,UAAU,8BAAf,kB,wBCddW,EAAe,CACjBN,YAAa,CACT,CAACK,KAAM,OAAQD,GAAI,GACnB,CAACC,KAAM,QAASD,GAAI,GACpB,CAACC,KAAM,QAASD,GAAI,GACpB,CAACC,KAAM,QAASD,GAAI,IAGxBG,aAAc,CACV,CAACC,QAAS,KAAMJ,GAAI,GACpB,CAACI,QAAS,qBAAsBJ,GAAI,GACpC,CAACI,QAAS,iBAAkBJ,GAAI,GAChC,CAACI,QAAS,kBAAmBJ,GAAI,K,2BCQ1BK,EAJaC,YAAU,CAClCC,KAAM,wBADkBD,EAdL,SAAAhB,GACnB,OACI,0BAAMkB,SAAUlB,EAAMmB,aAAclB,UAAU,wBAC1C,kBAACmB,EAAA,EAAD,CACIT,KAAK,cACLU,UAAU,WACVpB,UAAU,gBACVqB,YAAY,kBAEhB,4BAAQrB,UAAU,wBAAlB,YCWGsB,EApBE,SAAAvB,GAKb,OACI,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,sBACVD,EAAMa,aAAaN,KAAI,SAAAC,GAAE,OACtB,yBAAKC,IAAKD,EAAGE,IACT,uBAAGT,UAAU,qBAAb,QACA,uBAAGQ,IAAKD,EAAGM,QAASb,UAAU,mBAAmBO,EAAGM,cAIhE,kBAAC,EAAD,eAAqBI,SAdP,SAAAM,GAClBxB,EAAMyB,mBAAmBD,EAAME,eAauB1B,MCJ/C2B,EAJW/B,aAJF,SAAAC,GAAK,MAAK,CAC9BgB,aAAchB,EAAMQ,eAAeQ,gBAGY,CAC/CY,mBHkB8B,SAAAC,GAAW,MAAK,CAC9CE,KA/BiB,eAgCjBF,iBGrBsB9B,CAEvB2B,GCTGM,EAA6B,SAAAhC,GAAK,MAAK,CACzCC,OAAQD,EAAME,YAAYD,SAiBfgC,EAdU,SAAAC,GAAc,IAC7BC,EAD4B,iLAG1B,OAAKC,KAAKjC,MAAMF,OAIT,kBAACiC,EAAcE,KAAKjC,OAHhB,kBAAC,IAAD,CAAUG,GAAG,eAJE,GACF+B,IAAMH,WAUtC,OAAOnC,YAAQiC,EAARjC,CAAoCoC,I,iCCjBzCG,EAAU,gDAEVC,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINC,EAAkB,SAACC,EAAaC,GAAd,OAC3BN,EAASO,IAAT,UAAgBR,EAAhB,sBAAqCM,EAArC,kBAA0DC,IACrDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQtBC,EAAgB,SAAArC,GAAE,OAC3B0B,EAASY,KAAT,UAAiBb,EAAjB,kBAAkCzB,KAGzBuC,EAAkB,SAAAvC,GAAE,OAC7B0B,EAASc,OAAT,UAAmBf,EAAnB,kBAAoCzB,KAG3ByC,EAAa,SAAAzC,GAAE,OACxB0B,EAASO,IAAT,UAAgBR,EAAhB,mBAAkCzB,KAGzB0C,EAAiB,SAAA1C,GAAE,OAC5B0B,EAASO,IAAT,UAAgBR,EAAhB,0BAAyCzB,KAGhC2C,EAAmB,SAAAC,GAAM,OAClClB,EAASmB,IAAT,UAAgBpB,EAAhB,kBAAyC,CAACmB,OAAQA,KAGzCE,EAAW,SAACC,EAAOC,GAAR,IAAkBC,EAAlB,+DACpBvB,EAASY,KAAT,UAAiBb,EAAjB,cAAsC,CAACsB,QAAOC,WAAUC,gBAW/CC,EAAe,SAAAC,GACxB,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBzB,EAASmB,IAAT,UAAgBpB,EAAhB,iBAAwC2B,EAAU,CACrDvB,QAAS,CACL,eAAgB,0BClDtB0B,EAAc,CACZC,YAAa,CACT,CAAClB,KAAM,MACP,CAACA,KAAM,cACP,CAACA,KAAM,uBACP,CAACA,KAAM,WAEXmB,QAAS,KACTb,OAAQ,KACRc,WAAY,IAsDPC,EAAgB,SAAAf,GAAM,MAAK,CACpC1B,KArEoB,kBAsEpB0B,WAGSgB,EAAmB,SAAAT,GAAI,MAAK,CACrCjC,KAzEe,aA0EfiC,SAaSU,EAAkB,SAAC7D,GAC5B,8CAAO,WAAM8D,GAAN,eAAAC,EAAA,sEACoBtB,EAAWzC,GAD/B,OACGmC,EADH,OAEH2B,EA5BkC,CACtC5C,KAjEqB,mBAkErBuC,QA0B4BtB,EAASC,OAF9B,2CAAP,mDAAM,IAMG4B,EAAqB,SAAChE,GAC/B,8CAAO,WAAM8D,GAAN,eAAAC,EAAA,sEACoBtB,EAAWzC,GAD/B,OACGmC,EADH,OAEH2B,EApBgC,CACpC5C,KA7EoB,kBA8EpB+C,OAkB2B9B,EAASC,KAAK8B,OAAOC,QAFzC,2CAAP,mDAAM,I,OCtEKC,cACXhD,EACAlC,aANoB,SAAAC,GAAK,MAAK,CAC9BkF,iBAAkBlF,EAAME,YAAYiF,UAKX,CACrBN,uBAHOI,EArBC,SAAA9E,GAKZ,OAJAiF,qBAAU,WACNjF,EAAM0E,mBAAmB1E,EAAM+E,oBAChC,IAGC,yBAAK9E,UAAU,WACX,6BACI,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,WCVVW,EAAe,CACjBsE,UAAW,GACXxC,SAAU,EACVyC,WAAY,EACZC,YAAa,GACb3C,YAAa,EACb4C,YAAY,EACZC,mBAAoB,IA2EXC,EAAiB,SAAA9C,GAAW,MAAK,CAC1Cb,KAxFqB,mBAyFrBa,gBAQS+C,EAAmB,SAAAH,GAAU,MAAK,CAC3CzD,KAhGuB,qBAiGvByD,eAGSI,EAAoB,SAACC,EAAaV,GAAd,MAA0B,CACvDpD,KApGwB,qBAqGxB8D,cACAV,W,iBC3GSW,G,OAAa,SAAA3F,GAItB,IAHA,IAAM4F,EAAQ,GACVC,EAAaC,KAAKC,KAAK/F,EAAMmF,WAAanF,EAAM0C,UAE3CsD,EAAI,EAAGA,GAAKH,EAAYG,IAC7BJ,EAAMK,KAAKD,GAGf,IAAME,EAAeJ,KAAKC,KAAKF,EAAa7F,EAAMoF,aARnB,EASWe,mBAAS,GATpB,mBASxBC,EATwB,KASTC,EATS,KAUzBC,GAAyBF,EAAgB,GAAKpG,EAAMoF,YAAc,EAClEmB,EAAyBH,EAAgBpG,EAAMoF,YAErD,OACI,yBAAKnF,UAAU,oBACVmG,EAAgB,EACX,4BAAQI,QAAS,kBAAMH,EAAiBD,EAAgB,IAChDnG,UAAU,mCADlB,QAEA,4BAAQA,UAAU,4CAAlB,QAEN,yBAAKA,UAAU,4BACV2F,EACIa,QAAO,SAAAjG,GAAE,OAAIA,GAAM8F,GAAyB9F,GAAM+F,KAClDhG,KAAI,SAAAC,GAAE,OACH,4BAAQC,IAAKD,EAAIgG,QAAS,WACtBxG,EAAM0G,aAAalG,IAEfP,UAAWO,IAAOR,EAAMyC,YAAc,0BAA4B,oBAAqBjC,OAG1G0F,EAAeE,EACV,4BAAQI,QAAS,kBAAMH,EAAiBD,EAAgB,IAChDnG,UAAU,mCADlB,QAEA,4BAAQA,UAAU,4CAAlB,WCjCL0G,I,OAAY,kBACrB,6BAAS1G,UAAU,aACf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,yBAOvC,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,yBAOvC,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,yBAOvC,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,6BChBpC2G,GA7BD,SAAA5G,GACV,OACIA,EAAMqF,WACA,kBAAC,GAAD,MACA,yBAAKpF,UAAU,cACZD,EAAMkF,UAAU3E,KAAI,SAAAC,GAAE,OACnB,yBAAKC,IAAKD,EAAGE,GAAIT,UAAU,QACvB,kBAAC,IAAD,CAASE,GAAI,YAAcK,EAAGE,IAC1B,yBAAKT,UAAU,eACV4G,IAAKrG,EAAGoE,OAAOC,MAAQrE,EAAGoE,OAAOC,MAAQ,kGACzCiC,IAAI,MAEb,yBAAK7G,UAAU,qBACX,wBAAIA,UAAU,0BAA0BO,EAAGG,MAC1CH,EAAG8C,QAAU,uBAAGrD,UAAU,iCAAiCO,EAAG8C,SAElE9C,EAAGuG,SACE,4BAAQP,QAAS,kBAAMxG,EAAMgH,SAASxG,EAAGE,KACjCT,UAAWD,EAAMsF,mBAAmB2B,MAAK,SAAAvG,GAAE,OAAIA,IAAOF,EAAGE,MAAM,iCAAmC,0BAA2BV,EAAMsF,mBAAmB2B,MAAK,SAAAvG,GAAE,OAAIA,IAAOF,EAAGE,MAAM,cAAgB,YACzM,4BAAQ8F,QAAS,kBAAMxG,EAAMkH,OAAO1G,EAAGE,KAC/BT,UAAWD,EAAMsF,mBAAmB2B,MAAK,SAAAvG,GAAE,OAAIA,IAAOF,EAAGE,MAAM,+BAAiC,wBAAyBV,EAAMsF,mBAAmB2B,MAAK,SAAAvG,GAAE,OAAIA,IAAOF,EAAGE,MAAM,YAAc,cAGjN,kBAAC,EAAeV,KC7BnBmH,GAAmB,SAACtH,GAC7B,OAAOA,EAAMuH,iBAAiBlC,WAGrBmC,GAAsB,SAACxH,GAChC,OAAOA,EAAMuH,iBAAiB1E,UAGrB4E,GAAwB,SAACzH,GAClC,OAAOA,EAAMuH,iBAAiBjC,YAGrBoC,GAAyB,SAAC1H,GACnC,OAAOA,EAAMuH,iBAAiB3E,aAGrB+E,GAAwB,SAAC3H,GAClC,OAAOA,EAAMuH,iBAAiB/B,YAGrBoC,GAAgC,SAAC5H,GAC1C,OAAOA,EAAMuH,iBAAiB9B,oBAGrBoC,GAAyB,SAAC7H,GACnC,OAAOA,EAAMuH,iBAAiBhC,aAGrBuC,GAAgB,SAAC9H,GAC1B,OAAOA,EAAME,YAAYiF,QCfvB4C,G,2MAMFlB,aAAe,SAAAmB,GACX,EAAK7H,MAAM8H,qBAAqBD,EAAY,EAAK7H,MAAM0C,W,mFALvDT,KAAKjC,MAAM8H,qBAAqB7F,KAAKjC,MAAMyC,YAAaR,KAAKjC,MAAM0C,UACnET,KAAKjC,MAAM0E,mBAAmBzC,KAAKjC,MAAM+E,oB,+BAQzC,OAAO,oCACH,kBAAC,GAAD,eAAO2B,aAAczE,KAAKyE,cAAkBzE,KAAKjC,a,GAZ7BkC,IAAMH,WA4BvB+C,eACXhD,EACAlC,aAboB,SAAAC,GAAK,MAAK,CAC9BqF,UAAWiC,GAAiBtH,GAC5B6C,SAAU2E,GAAoBxH,GAC9BsF,WAAYmC,GAAsBzH,GAClCuF,YAAasC,GAAuB7H,GACpC4C,YAAa8E,GAAuB1H,GACpCwF,WAAYmC,GAAsB3H,GAClCyF,mBAAoBmC,GAA8B5H,GAClDkF,iBAAkB4C,GAAc9H,MAKP,CACrB0F,iBACAuC,qBLmE4B,SAACrF,EAAaC,GAC9C,8CAAO,WAAO8B,GAAP,eAAAC,EAAA,6DACHD,EAASgB,GAAiB,IAC1BhB,EAASe,EAAe9C,IAFrB,SAGoBD,EAAgBC,EAAaC,GAHjD,OAGGG,EAHH,OAIH2B,EA/B0B,CAC9B5C,KApFc,YAqFdmG,MA6BsBlF,EAASmF,QAC3BxD,EAtBwC,CAC5C5C,KA5FqB,mBA6FrBuD,WAoB+BtC,EAASsC,aACpCX,EAASgB,GAAiB,IANvB,2CAAP,mDAAM,IKnEF0B,OL6Ec,SAACxG,GACnB,8CAAO,WAAO8D,GAAP,SAAAC,EAAA,6DACHD,EAASiB,GAAkB,EAAM/E,IAD9B,SAEoBqC,EAAcrC,GAFlC,OAI8B,IAJ9B,OAIUoC,KAAKmF,YACdzD,EArD0B,CAClC5C,KA5EW,SA6EXoD,OAmD6BtE,IAEzB8D,EAASiB,GAAkB,EAAO/E,IAP/B,2CAAP,mDAAM,IK7EFsG,SLwFgB,SAACtG,GACrB,8CAAO,WAAO8D,GAAP,SAAAC,EAAA,6DACHD,EAASiB,GAAkB,EAAM/E,IAD9B,SAEoBuC,EAAgBvC,GAFpC,OAI8B,IAJ9B,OAIUoC,KAAKmF,YACdzD,EA5D4B,CACpC5C,KAhFa,WAiFboD,OA0D+BtE,IAE3B8D,EAASiB,GAAkB,EAAO/E,IAP/B,2CAAP,mDAAM,IKxFFgE,uBAPOI,CASb8C,IChDWM,I,qBAAgB,SAAAlI,GACzBiF,qBAAU,WACNkD,EAAUnI,EAAMsD,UACjB,CAACtD,EAAMsD,SAHwB,MAKF6C,oBAAS,GALP,mBAK3BiC,EAL2B,KAKjBC,EALiB,OAMNlC,mBAASnG,EAAMsD,QANT,mBAM3BA,EAN2B,KAMnB6E,EANmB,KAsBlC,OACI,yBAAKlI,UAAU,gEACTmI,EAKIpI,EAAMsI,QACF,2BAAOC,SAZF,SAAA/G,GACnB2G,EAAU3G,EAAMgH,cAAcC,QAWiBC,WAAW,EAAMD,MAAOnF,EAAQqF,OAlB5D,WACnBN,GAAY,GAEZrI,EAAM4I,kBAAkBtF,IAgBHrD,UAAU,gBAAgB2B,KAAK,SACtC,GAPJ5B,EAAMsI,QACF,yBAAKrI,UAAU,eACV4I,cAnBF,WACjBR,GAAY,KAkBqC/E,GAAU,oCAC7C,yBAAKrD,UAAU,gBAAgBqD,GAAU,iC,SC5BlDwF,I,OAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAgB/I,GAAW,EAApBgJ,KAAoB,kCACjD,OACI,6BACI,8CAAcD,EAAW/I,OAKxBiJ,GAAQ,SAAC,GAA6B,IAA5BF,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAShJ,EAAW,iCACxCkJ,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACIF,EACM,yBAAKjJ,UAAU,2BACb,2CAAY8I,EAAW/I,IACtBkJ,GAAY,yBAAKjJ,UAAU,oBAAoB+I,EAAKI,QAEvD,yBAAKnJ,UAAU,oBACb,2CAAY8I,EAAW/I,MC+DxBqJ,GAJkBrI,YAAU,CACvCC,KAAM,gBADuBD,EA3ET,SAAC,GAAoB,IAAnBG,EAAkB,EAAlBA,aAAkB,EACTgF,oBAAS,GADA,mBACjCmD,EADiC,KACzBC,EADyB,KAOxC,OACI,0BAAMrI,SAAUC,EAAclB,UAAU,8BACpC,yBAAKA,UAAU,qCACf,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,oCACX,2BAAOuJ,QAAQ,YAAYvJ,UAAU,oCAArC,oBACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,YAAYT,UAAU,8BAA8BqB,YAAY,OAAOX,KAAK,WAC/EU,UAAW4H,MAEtB,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,cAAcvJ,UAAU,oCAAvC,UACA,kBAACmB,EAAA,EAAD,CAAOqI,UAAU,MAAM/I,GAAG,cAAcT,UAAU,8BAC3CqB,YAAY,gCAAgCX,KAAK,4BACjDU,UAAW4H,MAEtB,yBAAKhJ,UAAU,oCACX,kBAACmB,EAAA,EAAD,CAAOV,GAAG,sBAAsBT,UAAU,gCAAgC2B,KAAK,WACxEjB,KAAK,iBAAiBU,UAAW4H,KACxC,2BAAOzC,QAtBG,WACtB+C,GAAcD,IAqBiCE,QAAQ,sBACpCvJ,UAAWqJ,EAAS,gDAAkD,6CAD7E,2BAIJ,yBAAKrJ,UAAU,oCACX,2BAAOuJ,QAAQ,eAAevJ,UAAU,oCAAxC,YACA,kBAACmB,EAAA,EAAD,CAAOqI,UAAU,MAAM/I,GAAG,eAAeT,UAAU,kCAC5CqB,YAAY,uBAAuBX,KAAK,UAAUU,UAAWyH,MAExE,yBAAK7I,UAAU,oCACX,2BAAOuJ,QAAQ,gBAAgBvJ,UAAU,oCAAzC,YACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,gBAAgBT,UAAU,8BAA8BqB,YAAY,OACvEX,KAAK,oBAAoBU,UAAW4H,MAE/C,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,eAAevJ,UAAU,oCAAxC,WACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,eAAeT,UAAU,8BAA8BqB,YAAY,OACtEX,KAAK,mBAAmBU,UAAW4H,MAE9C,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,eAAevJ,UAAU,oCAAxC,WACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,eAAeT,UAAU,8BAA8BqB,YAAY,OACtEX,KAAK,mBAAmBU,UAAW4H,MAE9C,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,iBAAiBvJ,UAAU,oCAA1C,aACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,iBAAiBT,UAAU,8BAA8BqB,YAAY,OACxEX,KAAK,qBAAqBU,UAAW4H,MAEhD,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,eAAevJ,UAAU,oCAAxC,WACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,eAAeT,UAAU,8BAA8BqB,YAAY,OACtEX,KAAK,mBAAmBU,UAAW4H,MAE9C,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,cAAcvJ,UAAU,oCAAvC,UACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,cAAcT,UAAU,8BAA8BqB,YAAY,OACrEX,KAAK,kBAAkBU,UAAW4H,MAE7C,yBAAKhJ,UAAU,oCACX,2BAAOuJ,QAAQ,gBAAgBvJ,UAAU,oCAAzC,aACA,kBAACmB,EAAA,EAAD,CAAOV,GAAG,gBAAgBT,UAAU,8BAA8BqB,YAAY,OACvEX,KAAK,oBAAoBU,UAAW4H,MAE/C,4BAAQhJ,UAAU,sCAAlB,aCvDDyJ,I,cAfF,SAAA1J,GACT,OACI,6BACI,uBAAGC,UAAU,eAAb,SACA,yBAAKA,UAAU,cACVD,EAAM8C,KAAKvC,KAAI,SAAAC,GAAE,OACd,yBAAKC,IAAKD,EAAGwC,MACT,yBAAK/C,UAAU,aAAaO,EAAGwC,cCcxC2G,I,OAJa3I,YAAU,CAClCC,KAAM,cADkBD,EAfT,SAAAhB,GACf,OACI,0BAAMkB,SAAUlB,EAAMmB,aAAclB,UAAU,YAC1C,kBAACmB,EAAA,EAAD,CACIT,KAAK,cACLU,UAAWyH,GACX7I,UAAU,sBACVqB,YAAY,aACZM,KAAK,OAAO6H,UAAU,QAE1B,4BAAQxJ,UAAU,qBAAlB,iBCIG2J,GAdC1H,IAAM2H,MAAK,SAAA7J,GAIvB,OACI,yBAAKC,UAAU,eACX,kBAAC,GAAD,CAAqBiB,SALb,SAAAM,GACZxB,EAAM8J,QAAQtI,EAAMuI,gBAKhB,yBAAK9J,UAAU,cACX,kBAAC,GAAD,CAAM6C,KAAM9C,EAAMgK,gBCAnBC,GAJUrK,aAJD,SAAAC,GAAK,MAAK,CAC9BmK,SAAUnK,EAAMqK,eAAehG,eAGe,CAC9C4F,QdoDmB,SAAApI,GAAW,MAAK,CACnCE,KA7Da,WA8DbF,iBcvDqB9B,CAEtBgK,IC0DG1F,GAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,yBAAKlE,UAAU,6CACX,uBAAGA,UAAU,kDAAb,SACA,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,mCAAb,YADJ,MACmEkE,EAAQgG,SAASC,SAAWjG,EAAQgG,SAASC,SAAW,UAE3H,yBAAKnK,UAAU,sCACX,uBAAGA,UAAU,mCAAb,WADJ,MACkEkE,EAAQgG,SAASE,QAAUlG,EAAQgG,SAASE,QAAU,UAExH,yBAAKpK,UAAU,sCACX,uBAAGA,UAAU,mCAAb,WADJ,MACkEkE,EAAQgG,SAASG,QAAUnG,EAAQgG,SAASG,QAAU,UAExH,yBAAKrK,UAAU,sCACX,uBAAGA,UAAU,mCAAb,aADJ,MACoEkE,EAAQgG,SAASI,UAAYpG,EAAQgG,SAASI,UAAY,UAE9H,yBAAKtK,UAAU,sCACX,uBAAGA,UAAU,mCAAb,WADJ,MACkEkE,EAAQgG,SAASK,QAAUrG,EAAQgG,SAASK,QAAU,UAExH,yBAAKvK,UAAU,sCACX,uBAAGA,UAAU,mCAAb,UADJ,MACiEkE,EAAQgG,SAASM,OAAStG,EAAQgG,SAASM,OAAS,UAErH,yBAAKxK,UAAU,sCACX,uBAAGA,UAAU,mCAAb,aADJ,MAEoBkE,EAAQgG,SAASO,SAAWvG,EAAQgG,SAASO,SAAW,YAMzEC,GA7FK,SAAA3K,GAAU,IAAD,EACOmG,oBAAS,GADhB,mBAClBiC,EADkB,KACRC,EADQ,KAazB,OACI,6BACKD,EAAW,kBAAC,GAAD,CAA0BwC,cAAe5K,EAAMmE,QAASjD,SAPvD,SAACM,GAClBxB,EAAM6K,qBAAqBrJ,EAAOxB,EAAMmE,QAAQa,QAChDqD,GAAY,IAM8BlE,QAASnE,EAAMmE,UAAa,KAClE,yBAAKlE,UAAU,qBACX,yBAAKA,UAAU,YACV4G,IAAI,iHACJC,IAAI,MAEb,yBAAK7G,UAAU,eACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cACV4G,IAAK7G,EAAMmE,QAAQS,OAAOC,MAAQ7E,EAAMmE,QAAQS,OAAOC,MAAQ,kGAC/DiC,IAAI,KACR9G,EAAMsI,SAAW,oCAAE,2BAAO5H,GAAG,iBAAiBT,UAAU,uCAC9BsI,SA3BrB,SAAA/G,GAClBA,EAAMsJ,OAAOC,MAAMC,QACnBhL,EAAMiL,eAAezJ,EAAMsJ,OAAOC,MAAM,KAyB4BnJ,KAAK,SAAQ,2BACjE3B,UAAU,yCAAyCuJ,QAAQ,kBADM,sBAIzE,yBAAKvJ,UAAU,wBACX,yBAAKA,UAAU,wCACX,uBAAGA,UAAU,yDAAyDD,EAAMmE,QAAQ+G,UACnFlL,EAAMsI,SAAW,4BAAQ9B,QAAS,kBAAM6B,GAAY,IAC3BpI,UAAU,sCADlB,qBAItB,kBAAC,GAAkBD,GACnB,yBAAKC,UAAU,qCACX,uBAAGA,UAAWD,EAAMmE,QAAQgH,eAAiB,uCAAyC,iDAAkDnL,EAAMmE,QAAQgH,eAAiB,oBAAsB,yBAC7L,uBAAGlL,UAAU,qCAAoC,uBAC7CA,UAAU,0CADmC,WAAjD,IACoED,EAAMmE,QAAQiH,2BAA6B,aAK3H,yBAAKnL,UAAU,6CACX,6BACI,yBAAKA,UAAU,kCAAiC,uBAC5CA,UAAU,uCADkC,YAErCD,EAAMmE,QAAQkH,SAAW,+BACpC,kBAAC,GAAgBrL,IAErB,kBAAC,GAAD,UC7CLsL,GAZC,SAAAtL,GACZ,OAAKA,EAAMmE,QAKP,yBAAKlE,UAAU,WACX,kBAAC,GAAgBD,IALd,kBAAC,GAAD,OCSTuL,G,yLAEEtJ,KAAKjC,MAAM0E,mBAAmBzC,KAAKjC,MAAM+E,kBACzC,IAAIC,EAAS/C,KAAKjC,MAAMwL,MAAMC,OAAOzG,OAChCA,IACDA,EAAS/C,KAAKjC,MAAM+E,kBAExB9C,KAAKjC,MAAMuE,gBAAgBS,GAC3B/C,KAAKjC,MAAM0L,eAAe1G,K,0CAI1B/C,KAAK0J,mB,yCAGUC,GACX3J,KAAKjC,MAAMwL,MAAMC,OAAOzG,SAAW4G,EAAUJ,MAAMC,OAAOzG,QAC1D/C,KAAK0J,mB,+BAKT,OACI,6BACI,kBAAC,GAAD,eAASrD,SAAUrG,KAAKjC,MAAMwL,MAAMC,OAAOzG,QAAY/C,KAAKjC,a,GAxB7CkC,IAAMH,WAqCtB+C,eACXhD,EACA+J,IACAjM,aAVoB,SAAAC,GAAK,MAAK,CAC9BsE,QAAStE,EAAMqK,eAAe/F,QAC9Bb,OAAQzD,EAAMqK,eAAe5G,OAC7ByB,iBAAkBlF,EAAME,YAAYiF,OACpClF,OAAQD,EAAME,YAAYD,UAMD,CACrByE,kBACAmH,ejBgDsB,SAAChL,GAC3B,8CAAO,WAAM8D,GAAN,eAAAC,EAAA,sEACoBrB,EAAe1C,GADnC,OACGmC,EADH,OAEH2B,EAASH,EAAcxB,EAASC,OAF7B,2CAAP,mDAAM,IiBhDF8F,kBjBsDyB,SAACtF,GAC9B,8CAAO,WAAMkB,GAAN,SAAAC,EAAA,sEACoBpB,EAAiBC,GADrC,OAG8B,IAH9B,OAGUR,KAAKmF,YACdzD,EAASH,EAAcf,IAJxB,2CAAP,mDAAM,IiBtDF2H,ejB+DsB,SAACpH,GAC3B,8CAAO,WAAMW,GAAN,eAAAC,EAAA,sEACoBb,EAAaC,GADjC,OAG8B,KAF3BhB,EADH,QAGUC,KAAKmF,YACdzD,EAASF,EAAiBzB,EAASC,KAAKA,KAAK8B,SAJ9C,2CAAP,mDAAM,IiB/DFiG,qBjBwE4B,SAAC/H,EAAMkC,GACvC,8CAAO,WAAMR,GAAN,SAAAC,EAAA,sEDrFuBN,ECsFgBrB,EDrF9CV,EAASmB,IAAT,UAAgBpB,EAAhB,WAAkCgC,GCoF3B,OAG8B,IAH9B,OAGUrB,KAAKmF,YACdzD,EAASD,EAAgBS,IAJ1B,iCDrFuB,IAAAb,ICqFvB,OAAP,mDAAM,IiBxEFO,uBATOI,CAWbyG,ICnCaO,I,OAzBA,SAAA9L,GACX,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,oBACf,kBAAC,IAAD,CAASA,UAAU,eAAeE,GAAG,YAArC,kBACA,yBAAKF,UAAU,qBACVD,EAAMF,OACD,yBAAKG,UAAU,iBAAiB4G,IAAK7G,EAAMoE,WAAY0C,IAAI,KAC3D,GACN,yBAAK7G,UAAU,oBACVD,EAAMF,OAEH,kBAAC,IAAD,CAAS0G,QAASxG,EAAM+L,YAAa9L,UAAU,oBAAoBE,GAAG,UAAtE,UACE,oCACE,kBAAC,IAAD,CAASF,UAAU,oBAAoBE,GAAG,UAA1C,SACA,uBAAGF,UAAU,8CACV+L,KAAK,8CADR,iB,SCdtBpL,GAAe,CACjBoE,OAAQ,KACRvB,MAAO,KACPwI,MAAO,KACPnM,QAAQ,GAeCoM,GAAkB,SAAClH,EAAQvB,EAAOwI,EAAOnM,GAAvB,MAAmC,CAC9D8B,KAtBuB,qBAuBvBuK,QAAS,CAACnH,SAAQvB,QAAOwI,QAAOnM,YAGvBsM,GAAqB,WAC9B,8CAAO,WAAO5H,GAAP,uBAAAC,EAAA,sEpBbPrC,EAASO,IAAT,UAAgBR,EAAhB,YACKS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QoBYxB,OACGD,EADH,SAEwBA,EAASC,KAA7BpC,EAFJ,EAEIA,GAAI+C,EAFR,EAEQA,MAAOwI,EAFf,EAEeA,MACU,IAAxBpJ,EAASoF,YACTzD,EAAS0H,GAAgBxL,EAAI+C,EAAOwI,GAAO,IAJ5C,2CAAP,mDAAM,IAsBGF,GAAc,WACvB,8CAAO,WAAOvH,GAAP,SAAAC,EAAA,sEpBPPrC,EAASc,OAAT,UAAmBf,EAAnB,eoBOO,OAG8B,IAH9B,OAGUW,KAAKmF,YACdzD,EAAS0H,GAAgB,KAAM,KAAM,MAAM,IAJ5C,2CAAP,mDAAM,ICnCKtM,gBANS,SAAAC,GAAK,MAAK,CAC9BuE,WAAYvE,EAAMqK,eAAe9F,WACjCtE,OAAQD,EAAME,YAAYD,OAC1BmM,MAAOpM,EAAME,YAAYkM,SAGW,CAACF,gBAA1BnM,EAZS,SAAAI,GACpB,OACI,kBAAC,GAAWA,MCRPqM,I,cAAW,SAAA5D,GACpB,IAAIA,EAIJ,MAAO,sBCmDI6D,GAJQtL,YAAU,CAC7BC,KAAM,SADaD,EA9CL,SAAAhB,GAAU,IAAD,EACQmG,oBAAS,GADjB,mBAChBmD,EADgB,KACRC,EADQ,KAOvB,OACI,6BACI,yBAAKtJ,UAAU,2BACf,0BAAMiB,SAAUlB,EAAMmB,aAAclB,UAAU,cAC1C,yBAAKA,UAAU,uBACX,wBAAIA,UAAU,oBAAd,yBACA,yBAAKA,UAAU,oBACX,kBAACmB,EAAA,EAAD,CAAOmL,SAAU,CAACF,IAAWhL,UAAW4H,GAAOtI,KAAK,QAC7CV,UAAWD,EAAMoJ,OAAyB,sBAAhBpJ,EAAMoJ,MAAgC,+BAAiC,yBACjG9H,YAAY,UAClBtB,EAAMoJ,OAAyB,sBAAhBpJ,EAAMoJ,MAClB,yBAAKnJ,UAAU,gCAAgCD,EAAMoJ,OAAe,MAE5E,yBAAKnJ,UAAU,oBACX,kBAACmB,EAAA,EAAD,CAAOmL,SAAU,CAACF,IAAWhL,UAAW4H,GAAOrH,KAAK,WAAWjB,KAAK,WAC7DV,UAAU,yBAAyBqB,YAAY,cAE1D,yBAAKrB,UAAU,iDACX,kBAACmB,EAAA,EAAD,CAAOC,UAAW4H,GAAOtI,KAAK,aAAaD,GAAG,aAAaT,UAAU,4BAC9D2B,KAAK,aAAY,2BAAO4E,QAvBzB,WACtB+C,GAAcD,IAuBiCrJ,UAAWqJ,EAAS,yBAA2B,kCAC/CE,QAAQ,cAFf,iBAI3BxJ,EAAMoJ,OAAyB,sBAAhBpJ,EAAMoJ,MAClB,yBAAKnJ,UAAU,0BAA0BD,EAAMoJ,OAAe,KAClE,yBAAKnJ,UAAU,oBACX,4BAAQA,UAAU,4BAAlB,UAEJ,iCACA,yBAAKA,UAAU,oBACX,uBAAG+L,KAAK,6CACL/L,UAAU,yDADb,kBChBTL,gBAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,YAAYD,UAGU,CACpC0M,WJWsB,SAAC/I,EAAOC,EAAUC,GACxC,8CAAO,WAAOa,GAAP,iBAAAC,EAAA,sEACoBjB,EAASC,EAAOC,EAAUC,GAD9C,OAG8B,KAF3Bd,EADH,QAGUC,KAAKmF,WACdzD,EAAS4H,OAEHtL,EAAU+B,EAASC,KAAK2J,SAASzB,OAAS,EAAInI,EAASC,KAAK2J,SAAS,GAAK,aAChFjI,EAASkI,aAAW,QAAS,CAACC,OAAQ7L,MAPvC,2CAAP,mDAAM,IIXNiL,gBAFWnM,EApBD,SAAAI,GAKV,OAAIA,EAAMF,OACC,kBAAC,IAAD,CAAUK,GAAG,aAIpB,6BACI,kBAAC,GAAD,CAAgBe,SAVP,SAACM,GACdxB,EAAMwM,WAAWhL,EAAMiC,MAAOjC,EAAMkC,SAAUlC,EAAMmC,mBCLtD/C,GAAe,CACjBgM,aAAa,GCSXC,G,4LAEE5K,KAAKjC,MAAM8M,kB,+BAIX,OAAK7K,KAAKjC,MAAM4M,YAIZ,yBAAK3M,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAO8M,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,SACrC,kBAAC,IAAD,CAAOD,KAAK,cAAcC,OAAQ,kBAAM,kBAACC,GAAD,SACxC,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,WAVpC,kBAAC,GAAD,U,GAPD9K,IAAMH,WA4BT+C,eACX+G,IACAjM,aANoB,SAAAC,GAAK,MAAK,CAC9B+M,YAAa/M,EAAMqN,WAAWN,eAKL,CACrBE,cDrBqB,WACzB,OAAO,SAACtI,GACJ,IAAM2I,EAAU3I,EAAS4H,MACzBgB,QAAQC,IAAI,CAACF,IACRvK,MAAK,WACF4B,EATyB,CACrC5C,KAnBwB,+BCwCbkD,CAKb+H,I,oBCtCIS,GAAUC,YAAgB,CAC5BrD,e1BW0B,WAAkC,IAAjCrK,EAAgC,uDAAxBoE,EAAauJ,EAAW,uCAC3D,OAAQA,EAAO5L,MACX,IArBS,WAsBL,OAAO,eACA/B,EADP,CAEIqE,YAAY,GAAD,mBAAMrE,EAAMqE,aAAZ,CAAyB,CAAClB,KAAMwK,EAAO9L,iBAE1D,IAzBiB,mBA0Bb,OAAO,eACA7B,EADP,CAEIsE,QAASqJ,EAAOrJ,UAExB,IA7BgB,kBA8BZ,OAAO,eACAtE,EADP,CAEIyD,OAAQkK,EAAOlK,SAGvB,IAlCW,aAmCP,OAAO,eACAzD,EADP,CAEIsE,QAAQ,eAAKtE,EAAMsE,QAAZ,CAAqBS,OAAQ4I,EAAO3J,SAGnD,IAvCgB,kBAwCZ,OAAO,eACAhE,EADP,CAEIuE,WAAYoJ,EAAO7I,SAG3B,IA5Ca,eA6CT,OAAO,eACA9E,EADP,CAEIsE,QAAQ,eAAKtE,EAAMsE,QAAZ,CAAqBrB,KAAM0K,EAAO3J,SAGjD,QACI,OAAOhE,I0B/CfQ,ehCO0B,WAAmC,IAAlCR,EAAiC,uDAAzBe,EAAc4M,EAAW,uCAC5D,OAAQA,EAAO5L,MACX,IApBa,eAqBT,OAAO,eACA/B,EADP,CAEIgB,aAAa,GAAD,mBAAMhB,EAAMgB,cAAZ,CAA0B,CAACC,QAAS0M,EAAO9L,YAAahB,GAAI,OAEhF,QACI,OAAOb,IgCdfuH,iBxBQ4B,WAAmC,IAAlCvH,EAAiC,uDAAzBe,EAAc4M,EAAW,uCAC9D,OAAQA,EAAO5L,MACX,IApBO,SAqBH,OAAO,eACA/B,EADP,CAEIqF,UAAWrF,EAAMqF,UAAU3E,KAAI,SAAAkN,GAC3B,OAAIA,EAAE/M,KAAO8M,EAAOxI,OACT,eAAIyI,EAAX,CAAc1G,UAAU,IAGrB0G,OAGnB,IA9BS,WA+BL,OAAO,eACA5N,EADP,CAEIqF,UAAWrF,EAAMqF,UAAU3E,KAAI,SAAAkN,GAC3B,OAAIA,EAAE/M,KAAO8M,EAAOxI,OACT,eAAIyI,EAAX,CAAc1G,UAAU,IAGrB0G,OAGnB,IAxCU,YAyCN,OAAO,eACA5N,EADP,CAEIqF,UAAWsI,EAAOzF,QAE1B,IA5CiB,mBA6Cb,OAAO,eACAlI,EADP,CAEI4C,YAAa+K,EAAO/K,cAE5B,IAhDiB,mBAiDb,OAAO,eACA5C,EADP,CAEIsF,WAAYqI,EAAOrI,aAE3B,IApDmB,qBAqDf,OAAO,eACAtF,EADP,CAEIwF,WAAYmI,EAAOnI,aAE3B,IAxDoB,qBAyDhB,OAAO,eACAxF,EADP,CAEIyF,mBAAoBkI,EAAO9H,YAAP,sBACV7F,EAAMyF,oBADI,CACgBkI,EAAOxI,SACrCnF,EAAMyF,mBAAmBmB,QAAO,SAAA/F,GAAE,OAAIA,IAAO8M,EAAOxI,YAGlE,QACI,OAAOnF,IwB5DfE,YPDuB,WAAmC,IAAlCF,EAAiC,uDAAzBe,GAAc4M,EAAW,uCACzD,OAAQA,EAAO5L,MACX,IAXmB,qBAYf,OAAO,eACA/B,EADP,GAEO2N,EAAOrB,SAElB,QACI,OAAOtM,IONfoB,KAAMyM,KACNR,WFPsB,WAAmC,IAAlCrN,EAAiC,uDAAzBe,GAAc4M,EAAW,uCACxD,OAAQA,EAAO5L,MACX,IARoB,sBAShB,OAAO,eACA/B,EADP,CAEI+M,aAAa,IAErB,QACI,OAAO/M,MEIJ8N,GAFDC,YAAYN,GAASO,YAAgBC,OCXnDC,IAASf,OACL,kBAAC,IAAD,CAAYgB,SAAUC,kBAClB,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,GAAD,QAEOO,SAASC,eAAe,U","file":"static/js/main.5a2a4e4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = props => {\r\n    return (\r\n        <div>\r\n            {props.isAuth\r\n                ? <nav className=\"navigation\">\r\n                    <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/profile\">Profile</NavLink>\r\n                    <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/dialogs\">Message</NavLink>\r\n                    {/* <NavLink className=\"navigation__link\" to=\"\">News</NavLink> */}\r\n                    {/* <NavLink className=\"navigation__link\" to=\"\">Music</NavLink> */}\r\n                    <NavLink className=\"navigation__link\" activeClassName=\"active-link\" to=\"/find-users\">Find\r\n                        Users</NavLink>\r\n                    {/* <NavLink className=\"navigation__link\" to=\"\">Settings</NavLink> */}\r\n                </nav>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Navbar);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './DialogItem.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    dialogs: state.dialogsReducer.DialogsData,\r\n});\r\n\r\nconst DialogItem = props => {\r\n    return (\r\n        props.dialogs.map(el => (\r\n            <div key={el.id}>\r\n                <NavLink to={\"/dialogs/\" + el.id} activeClassName=\"dialogs__item--active\"\r\n                         className=\"dialogs__item-wrapper\">\r\n                    <div className=\"dialogs__item\">{el.name}</div>\r\n                    <div className=\"dialogs__item-last-message\">Hello</div>\r\n                </NavLink>\r\n            </div>\r\n        ))\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DialogItem);\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nconst initislState = {\r\n    DialogsData: [\r\n        {name: 'Alex', id: 1},\r\n        {name: 'Masha', id: 2},\r\n        {name: 'Pasha', id: 3},\r\n        {name: 'Sasha', id: 4},\r\n    ],\r\n\r\n    MessagesData: [\r\n        {message: 'Hi', id: 1},\r\n        {message: 'How are you today?', id: 2},\r\n        {message: 'Happy new Year', id: 3},\r\n        {message: 'Happy Birthday ', id: 4},\r\n    ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {message: action.messageBody, id: 6}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const onSendMessageCLick = messageBody => ({\r\n    type: SEND_MESSAGE,\r\n    messageBody,\r\n});\r\n","import React from 'react';\r\nimport './AddMessageForm.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"add-message__wrapper\">\r\n            <Field\r\n                name=\"messageBody\"\r\n                component=\"textarea\"\r\n                className=\"dialog__input\"\r\n                placeholder=\"Enter message\"\r\n            />\r\n            <button className=\"btn btn__new-message\">Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageResuxForm = reduxForm({\r\n    form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default AddMessageResuxForm;","import React from 'react';\r\nimport './Messages.css';\r\nimport AddMessageResuxForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Messages = props => {\r\n    const addNewMessage = event => {\r\n        props.onSendMessageCLick(event.messageBody);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialog__wrapper\">\r\n            <div className=\"dialog__background\">\r\n                {props.MessagesData.map(el => (\r\n                    <div key={el.id}>\r\n                        <p className=\"dialog__user-name\">Alex</p>\r\n                        <p key={el.message} className=\"dialog__message\">{el.message}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <AddMessageResuxForm onSubmit={addNewMessage} {...props}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import './Messages.css';\r\nimport {\r\n    onSendMessageCLick,\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\n\r\nconst mapStateToProps = state => ({\r\n    MessagesData: state.dialogsReducer.MessagesData,\r\n});\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {\r\n    onSendMessageCLick,\r\n})(Messages);\r\n\r\nexport default MessagesContainer;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nconst WithAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login' />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n\r\nexport default WithAuthRedirect;","import * as axios from \"axios\";\r\n\r\nconst baseUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e7f5a643-78d7-4edd-b331-1591701b245f\",\r\n    }\r\n});\r\n\r\nexport const getUsersRequest = (currentPage, pageSize) => (\r\n    instance.get(`${baseUrl}users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n);\r\n\r\nexport const authMeRequest = () => (\r\n    instance.get(`${baseUrl}auth/me`)\r\n        .then(response => response.data)\r\n);\r\n\r\nexport const followRequest = id => (\r\n    instance.post(`${baseUrl}follow/${id}`)\r\n);\r\n\r\nexport const unFollowRequest = id => (\r\n    instance.delete(`${baseUrl}follow/${id}`)\r\n);\r\n\r\nexport const getProfile = id => (\r\n    instance.get(`${baseUrl}profile/${id}`)\r\n);\r\n\r\nexport const getUsersStatus = id => (\r\n    instance.get(`${baseUrl}profile/status/${id}`)\r\n);\r\n\r\nexport const updateUserStatus = status => (\r\n    instance.put(`${baseUrl}profile/status`, {status: status})\r\n);\r\n\r\nexport const loginAPI = (email, password, rememberMe = false) => (\r\n    instance.post(`${baseUrl}auth/login`, {email, password, rememberMe})\r\n);\r\n\r\nexport const logoutAPI = () => (\r\n    instance.delete(`${baseUrl}auth/login`)\r\n);\r\n\r\nexport const saveProfileInfoAPI = profile => (\r\n    instance.put(`${baseUrl}profile`, profile)\r\n);\r\n\r\nexport const savePhotoAPI = file => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    return instance.put(`${baseUrl}profile/photo`, formData, {\r\n        headers: {\r\n            'Content-type': 'multipart/form-data',\r\n        }\r\n    })\r\n};\r\n\r\n","import {getProfile, getUsersStatus, savePhotoAPI, saveProfileInfoAPI, updateUserStatus} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\nconst GET_USER_AVATAR = 'GET_USER_AVATAR';\r\nconst SAVE_PROFILE = 'SAVE_PROFILE';\r\n\r\nconst initalState = {\r\n        ProfileData: [\r\n            {post: 'Hi'},\r\n            {post: 'How Are U?'},\r\n            {post: 'Where are you from?'},\r\n            {post: 'Happy!'},\r\n        ],\r\n        profile: null,\r\n        status: null,\r\n        userAvatar: '',\r\n};\r\n\r\nexport const profileReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                ProfileData: [...state.ProfileData, {post: action.messageBody}],\r\n        };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.file},\r\n            };\r\n\r\n        case GET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userAvatar: action.avatar,\r\n            };\r\n\r\n        case SAVE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, data: action.file},\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = messageBody => ({\r\n    type: ADD_POST,\r\n    messageBody,\r\n});\r\n\r\nexport const setUserProfile = profile => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const setUserStatus = status => ({\r\n    type: SET_USER_STATUS,\r\n    status,\r\n});\r\n\r\nexport const savePhotoSuccess = file => ({\r\n    type: SAVE_PHOTO,\r\n    file,\r\n});\r\n\r\nexport const getUserAvatar = avatar => ({\r\n    type: GET_USER_AVATAR,\r\n    avatar,\r\n});\r\n\r\nexport const saveProfileSuccess = profile => ({\r\n    type: SAVE_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const getProfileThunk = (id) => {\r\n    return async(dispatch) => {\r\n        const response = await getProfile(id);\r\n        dispatch(setUserProfile(response.data));\r\n    };\r\n};\r\n\r\nexport const getUserAvatarThunk = (id) => {\r\n    return async(dispatch) => {\r\n        const response = await getProfile(id);\r\n        dispatch(getUserAvatar(response.data.photos.large))\r\n    };\r\n};\r\n\r\nexport const getStatusThunk = (id) => {\r\n    return async(dispatch) => {\r\n        const response = await getUsersStatus(id);\r\n        dispatch(setUserStatus(response.data));\r\n    };\r\n};\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return async(dispatch) => {\r\n        const response = await updateUserStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    };\r\n};\r\n\r\nexport const savePhotoThunk = (file) => {\r\n    return async(dispatch) => {\r\n        const response = await savePhotoAPI(file);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    };\r\n};\r\n\r\nexport const saveProfileInfoThunk = (data, userId) => {\r\n    return async(dispatch) => {\r\n        const response = await saveProfileInfoAPI(data);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getProfileThunk(userId));\r\n        } \r\n    };\r\n};\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './Dialogs.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessagesContainer from \"./Messagess/MessagesConteiner\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {getUserAvatarThunk} from '../../redux/profile-reducer';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Dialogs = props => {\r\n    useEffect(() => {\r\n        props.getUserAvatarThunk(props.authorizedUserId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div>\r\n                <DialogItem/>\r\n            </div>\r\n            <div>\r\n                <MessagesContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    authorizedUserId: state.authReducer.userId,\r\n});\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        getUserAvatarThunk,\r\n    })\r\n)(Dialogs);\r\n\r\n","import {followRequest, getUsersRequest, unFollowRequest} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_ITEMS_AMOUNT = 'SET_ITEMS_AMOUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FETCHING';\r\n\r\nconst initislState = {\r\n    UsersData: [],\r\n    pageSize: 6,\r\n    totalCount: 0,\r\n    portionSize: 10,\r\n    currentPage: 1,\r\n    isFatching: false,\r\n    isFollowingProcess: [],\r\n};\r\n\r\nexport const findUsersReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                UsersData: state.UsersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                UsersData: state.UsersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                UsersData: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case SET_ITEMS_AMOUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFatching: action.isFatching,\r\n            };\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                isFollowingProcess: action.isFollowing\r\n                    ? [...state.isFollowingProcess, action.userId]\r\n                    : state.isFollowingProcess.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followClick = userId => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowClick = userId => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsers = users => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const setCurrentPage = currentPage => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setTotalUsersItem = totalCount => ({\r\n    type: SET_ITEMS_AMOUNT,\r\n    totalCount\r\n});\r\n\r\nexport const toggleIsFatching = isFatching => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFatching\r\n});\r\n\r\nexport const toggleIsFollowing = (isFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING,\r\n    isFollowing,\r\n    userId,\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFatching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        const response = await getUsersRequest(currentPage, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersItem(response.totalCount));\r\n        dispatch(toggleIsFatching(false));\r\n    }\r\n};\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowing(true, id));\r\n        const response = await followRequest(id);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followClick(id));\r\n        }\r\n        dispatch(toggleIsFollowing(false, id));\r\n    };\r\n};\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowing(true, id));\r\n        const response = await unFollowRequest(id);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollowClick(id));\r\n        }\r\n        dispatch(toggleIsFollowing(false, id));\r\n    };\r\n};","import React, {useState} from \"react\";\r\nimport './Pagination.css'\r\n\r\nexport const Pagination = props => {\r\n    const pages = [];\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    const [portionNumber, setportionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div className=\"pagination__list\">\r\n            {portionNumber > 1\r\n                ? <button onClick={() => setportionNumber(portionNumber - 1)}\r\n                          className=\"pagination__list-swipe-btn-prev\">prev</button>\r\n                : <button className=\"pagination__list-swipe-btn-prev--disable\">prev</button>\r\n            }\r\n            <div className=\"pagination__list-wrapper\">\r\n                {pages\r\n                    .filter(el => el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n                    .map(el => (\r\n                        <button key={el} onClick={() => {\r\n                            props.onChangePage(el)\r\n                        }}\r\n                                className={el === props.currentPage ? \"pagination__item-active\" : \"pagination__item\"}>{el}</button>\r\n                    ))}\r\n            </div>\r\n            {portionCount > portionNumber\r\n                ? <button onClick={() => setportionNumber(portionNumber + 1)}\r\n                          className=\"pagination__list-swipe-btn-next\">next</button>\r\n                : <button className=\"pagination__list-swipe-btn-next--disable\">next</button>\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport './Preloader.css';\r\n\r\nexport const Preloader = () => (\r\n    <section className=\"animation\">\r\n        <div className=\"cssload-loader\">\r\n            <div className=\"cssload-top\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-bottom\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-left\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cssload-right\">\r\n                <div className=\"cssload-square\">\r\n                    <div className=\"cssload-square\">\r\n                        <div className=\"cssload-square\">\r\n                            <div className=\"cssload-square\">\r\n                                <div className=\"cssload-square\">\r\n                                    <div className=\"cssload-square\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n);","import React from 'react';\r\nimport './Users.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Pagination} from \"./Pagination/Pagination\";\r\nimport {Preloader} from \"../../../Preloader\";\r\n\r\nconst Users = props => {\r\n    return (\r\n        props.isFatching\r\n            ? <Preloader/>\r\n            : <div className=\"users-list\">\r\n                {props.UsersData.map(el => (\r\n                    <div key={el.id} className=\"user\">\r\n                        <NavLink to={\"/profile/\" + el.id}>\r\n                            <img className=\"user__avatar\"\r\n                                 src={el.photos.large ? el.photos.large : \"https://m2bob-forum.net/wcf/images/avatars/3e/2720-3e546be0b0701e0cb670fa2f4fcb053d4f7e1ba5.jpg\"}\r\n                                 alt=\"\"/>\r\n                        </NavLink>\r\n                        <div className=\"user__description\">\r\n                            <h3 className=\"user__description-item\">{el.name}</h3>\r\n                            {el.status && <p className=\"user__description-item-status\">{el.status}</p>}\r\n                        </div>\r\n                        {el.followed\r\n                            ? <button onClick={() => props.unfollow(el.id)}\r\n                                      className={props.isFollowingProcess.some(id => id === el.id) ? \"btn user__unfollow-btn-disable\" : \"btn user__unfollow-btn\"}>{props.isFollowingProcess.some(id => id === el.id) ? \"Unfollowing\" : \"Unfollow\"}</button>\r\n                            : <button onClick={() => props.follow(el.id)}\r\n                                      className={props.isFollowingProcess.some(id => id === el.id) ? \"btn user__follow-btn-disable\" : \"btn user__follow-btn\"}>{props.isFollowingProcess.some(id => id === el.id) ? \"Following\" : \"Follow\"}</button>}\r\n                    </div>\r\n                ))}\r\n                <Pagination {...props}/>\r\n            </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Users;","export const getUsersSelector = (state) => {\r\n    return state.findUsersReducer.UsersData;\r\n};\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.findUsersReducer.pageSize;\r\n};\r\n\r\nexport const getTotalCountSelector = (state) => {\r\n    return state.findUsersReducer.totalCount;\r\n};\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.findUsersReducer.currentPage;\r\n};\r\n\r\nexport const getisFatchingSelector = (state) => {\r\n    return state.findUsersReducer.isFatching;\r\n};\r\n\r\nexport const getisFollowingProcessSelector = (state) => {\r\n    return state.findUsersReducer.isFollowingProcess;\r\n};\r\n\r\nexport const getPortionSizeSelector = (state) => {\r\n    return state.findUsersReducer.portionSize;\r\n};\r\n\r\nexport const getIdSelector = (state) => {\r\n    return state.authReducer.userId;\r\n};","import {follow, getUsersThunkCreator, setCurrentPage, unfollow} from \"../../redux/findUsersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React from 'react';\r\nimport Users from \"./Users/Users\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector, getisFatchingSelector, getisFollowingProcessSelector,\r\n    getPageSizeSelector, getPortionSizeSelector,\r\n    getTotalCountSelector,\r\n    getUsersSelector, getIdSelector\r\n} from \"../../redux/users-selectors\";\r\nimport {getUserAvatarThunk} from '../../redux/profile-reducer';\r\n\r\nclass FindUserContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n        this.props.getUserAvatarThunk(this.props.authorizedUserId);\r\n    }\r\n\r\n    onChangePage = pageNumber => {\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            <Users onChangePage={this.onChangePage} {...this.props}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UsersData: getUsersSelector(state),\r\n    pageSize: getPageSizeSelector(state),\r\n    totalCount: getTotalCountSelector(state),\r\n    portionSize: getPortionSizeSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    isFatching: getisFatchingSelector(state),\r\n    isFollowingProcess: getisFollowingProcessSelector(state),\r\n    authorizedUserId: getIdSelector(state),\r\n});\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        setCurrentPage,\r\n        getUsersThunkCreator,\r\n        follow,\r\n        unfollow,\r\n        getUserAvatarThunk,\r\n    }),\r\n)(FindUserContainer);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './ProfileStatus.css';\r\n\r\nexport const ProfileStatus = props => {\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n\r\n        props.updateStatusThunk(status);\r\n    };\r\n\r\n    const onStatusChange = event => {\r\n        setStatus(event.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"personal-information__item personal-information__item-status\">\r\n            {!editMode\r\n                ? props.isOwner\r\n                    ? <div className=\"status__text\"\r\n                           onDoubleClick={activateMode}>{status || \"Double click to change status...\"}</div>\r\n                    : <div className=\"status__text\">{status || \"My status could be here...\"}</div>\r\n                : props.isOwner\r\n                    ? <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateMode}\r\n                             className=\"status__input\" type=\"text\"/>\r\n                    : ''\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport './FormControls.css'\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <textarea {...input} {...props} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        hasError\r\n            ? <div className=\"controlled-input__error\">\r\n                <input  {...input} {...props} />\r\n                {hasError && <div className=\"controlled-error\">{meta.error}</div>}\r\n            </div>\r\n            : <div className=\"controlled-input\">\r\n                <input  {...input} {...props} />\r\n            </div>\r\n    )\r\n};","import React, {useState} from 'react';\r\nimport {Input, TextArea} from \"../../common/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit}) => {\r\n    const [toggle, changeToggle] = useState(true);\r\n\r\n    const handleToggleClick = () => {\r\n        changeToggle(!toggle)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"personal-information__form\">\r\n            <div className=\"personal-information__background\"/>\r\n            <div className=\"personal-information__form-wrapper\">\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-name\" className=\"personal-information__form-label\">Name and surname</label>\r\n                    <Field id=\"form-name\" className=\"personal-information__input\" placeholder=\"Name\" name=\"fullName\"\r\n                           component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-skills\" className=\"personal-information__form-label\">Skills</label>\r\n                    <Field maxlength=\"100\" id=\"form-skills\" className=\"personal-information__input\"\r\n                           placeholder=\"looking For A Job Description\" name=\"lookingForAJobDescription\"\r\n                           component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <Field id=\"form-lookingForAJob\" className=\"personal-information__checbox\" type=\"checkbox\"\r\n                           name=\"lookingForAJob\" component={Input}/>\r\n                    <label onClick={handleToggleClick} htmlFor=\"form-lookingForAJob\"\r\n                           className={toggle ? \"personal-information__form-label--not-checked\" : \"personal-information__form-label--checked\"}>I\r\n                        am looking for a job</label>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-aboutMe\" className=\"personal-information__form-label\">About me</label>\r\n                    <Field maxlength=\"150\" id=\"form-aboutMe\" className=\"personal-information__text-area\"\r\n                           placeholder=\"Write about yourself\" name=\"aboutMe\" component={TextArea}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-facebook\" className=\"personal-information__form-label\">Facebook</label>\r\n                    <Field id=\"form-facebook\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.facebook\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-website\" className=\"personal-information__form-label\">Website</label>\r\n                    <Field id=\"form-website\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.website\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-twitter\" className=\"personal-information__form-label\">Twitter</label>\r\n                    <Field id=\"form-twitter\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.twitter\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-instagram\" className=\"personal-information__form-label\">Instagram</label>\r\n                    <Field id=\"form-instagram\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.instagram\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-youTube\" className=\"personal-information__form-label\">YouTube</label>\r\n                    <Field id=\"form-youTube\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.youtube\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-gitHub\" className=\"personal-information__form-label\">GitHub</label>\r\n                    <Field id=\"form-gitHub\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.github\" component={Input}/>\r\n                </div>\r\n                <div className=\"personal-information__form-field\">\r\n                    <label htmlFor=\"form-mainLink\" className=\"personal-information__form-label\">Main Link</label>\r\n                    <Field id=\"form-mainLink\" className=\"personal-information__input\" placeholder=\"Name\"\r\n                           name=\"contacts.mainLink\" component={Input}/>\r\n                </div>\r\n                <button className=\"btn personal-information__save-btn\">Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormREduxForm = reduxForm({\r\n    form: \"edit-profile\",\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormREduxForm;","import React from 'react';\r\nimport './Post.css';\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div>\r\n            <p className=\"posts__sign\">Posts</p>\r\n            <div className=\"posts-list\">\r\n                {props.data.map(el => (\r\n                    <div key={el.post}>\r\n                        <div className=\"post-item\">{el.post}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './AddNewPost.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../../../../common/FormsControls\";\r\n\r\nconst AddNewPost = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"new-post\">\r\n            <Field\r\n                name=\"newPostBody\"\r\n                component={TextArea}\r\n                className=\"new-post__text-area\"\r\n                placeholder=\"Write post\"\r\n                type=\"text\" maxlength=\"200\"\r\n            />\r\n            <button className=\"btn btn__new-post\">New Post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostResuxForm = reduxForm({\r\n    form: \"AddNewPost\",\r\n})(AddNewPost);\r\n\r\nexport default AddNewPostResuxForm;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostResuxForm from \"./Post/AddNewPost/AddNewPost\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const addPost = event => {\r\n        props.addPost(event.newPostBody);\r\n    };\r\n    return (\r\n        <div className=\"main__posts\">\r\n            <AddNewPostResuxForm onSubmit={addPost}/>\r\n            <div className=\"posts-list\">\r\n                <Post data={props.PostData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import './MyPosts.css';\r\nimport {addPost} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    PostData: state.profileReducer.ProfileData,\r\n});\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState} from 'react';\r\nimport './ProfileInfo.css'\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataFormREduxForm from \"./ProfileDataForm\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst ProfileInfo = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const onMainPhotoUpdate = event => {\r\n        if (event.target.files.length) {\r\n            props.savePhotoThunk(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        props.saveProfileInfoThunk(event, props.profile.userId);\r\n        setEditMode(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? <ProfileDataFormREduxForm initialValues={props.profile} onSubmit={handleSubmit}\r\n                                                  profile={props.profile}/> : null}\r\n            <div className=\"main__profile-img\">\r\n                <img className=\"main__img\"\r\n                     src=\"https://images.pexels.com/photos/1726964/pexels-photo-1726964.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                     alt=\"\"/>\r\n            </div>\r\n            <div className=\"description\">\r\n                <div className=\"description__wrapper\">\r\n                    <div className=\"avatar\">\r\n                        <img className=\"avatar__img\"\r\n                             src={props.profile.photos.large ? props.profile.photos.large : 'https://m2bob-forum.net/wcf/images/avatars/3e/2720-3e546be0b0701e0cb670fa2f4fcb053d4f7e1ba5.jpg'}\r\n                             alt=\"\"/>\r\n                        {props.isOwner && <><input id=\"load-photo-btn\" className=\"personal-information__load-photo-btn\"\r\n                                                   onChange={onMainPhotoUpdate} type=\"file\"/><label\r\n                            className=\"personal-information__load-photo-lable\" htmlFor=\"load-photo-btn\">Upload new\r\n                            photo</label></>}\r\n                    </div>\r\n                    <div className=\"personal-information\">\r\n                        <div className=\"personal-information__items-presents\">\r\n                            <p className=\"personal-information__item personal-information__name\">{props.profile.fullName}</p>\r\n                            {props.isOwner && <button onClick={() => setEditMode(true)}\r\n                                                      className=\"btn personal-information__edit-btn\">Edit\r\n                                information</button>}\r\n                        </div>\r\n                        <ProfileStatus {...props}/>\r\n                        <div className=\"personal-information__job-wrapper\">\r\n                            <p className={props.profile.lookingForAJob ? \"personal-information__loking-for-job\" : \"personal-information__item-not-loking-for-job\"}>{props.profile.lookingForAJob ? \"Looking for a job\" : \"Not looking for a job\"}</p>\r\n                            <p className=\"personal-information__item-skills\"><p\r\n                                className=\"personal-information__item-skills-sign\">Skills:</p> {props.profile.lookingForAJobDescription || \"absent\"}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"personal-information__links-posts-wrapper\">\r\n                    <div>\r\n                        <div className=\"personal-information__about-me\"><p\r\n                            className=\"personal-information__about-me-sign\">About\r\n                            me</p>{props.profile.aboutMe || \"Information about myself...\"}</div>\r\n                        <ProfileData {...props}/>\r\n                    </div>\r\n                    <MyPostsContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div className=\"personal-information__items-list-contacts\">\r\n            <p className=\"personal-information__items-list-contacts-sign\">Links</p>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Facebook</p> - {profile.contacts.facebook ? profile.contacts.facebook : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Website</p> - {profile.contacts.website ? profile.contacts.website : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Twitter</p> - {profile.contacts.twitter ? profile.contacts.twitter : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Instagram</p> - {profile.contacts.instagram ? profile.contacts.instagram : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">YouTube</p> - {profile.contacts.youtube ? profile.contacts.youtube : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">GitHub</p> - {profile.contacts.github ? profile.contacts.github : \"absent\"}\r\n            </div>\r\n            <div className=\"personal-information__item-present\">\r\n                <p className=\"personal-information__bold-text\">Main\r\n                    Link</p> - {profile.contacts.mainLink ? profile.contacts.mainLink : \"absent\"}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport './Profile.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {Preloader} from \"../../Preloader\";\r\n\r\nconst Profile = props => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <ProfileInfo {...props}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    savePhotoThunk,\r\n    saveProfileInfoThunk,\r\n    updateStatusThunk,\r\n    getUserAvatarThunk,\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        this.props.getUserAvatarThunk(this.props.authorizedUserId)\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        getProfileThunk,\r\n        getStatusThunk,\r\n        updateStatusThunk,\r\n        savePhotoThunk,\r\n        saveProfileInfoThunk,\r\n        getUserAvatarThunk,\r\n    })\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__wrapper\"/>\r\n            <NavLink className=\"header__sign\" to=\"/profile\">Social Network</NavLink>\r\n            <div className=\"header__user-auth\">\r\n                {props.isAuth\r\n                    ? <img className=\"header__avatar\" src={props.userAvatar} alt=\"\"/>\r\n                    : \"\"}\r\n                <div className=\"header__sign-btn\">\r\n                    {props.isAuth\r\n                        ?\r\n                        <NavLink onClick={props.logoutThunk} className=\"header__sign-link\" to=\"/login\">Logout</NavLink>\r\n                        : <>\r\n                            <NavLink className=\"header__sign-link\" to=\"/login\">Login</NavLink>\r\n                            <a className=\"header__sign-link header__sign-link-sign-up\"\r\n                               href=\"https://social-network.samuraijs.com/login\">Sign up</a>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import {authMeRequest, loginAPI, logoutAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nconst initislState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nexport const authReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth},\r\n});\r\n\r\nexport const authMeRequestThunk = () => {\r\n    return async (dispatch) => {\r\n        const response = await authMeRequest();\r\n        const {id, email, login} = response.data;\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    };\r\n};\r\n\r\nexport const loginThunk = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        const response = await loginAPI(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMeRequestThunk());\r\n        } else {\r\n            const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    };\r\n};\r\n\r\nexport const logoutThunk = () => {\r\n    return async (dispatch) => {\r\n        const response = await logoutAPI();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunk} from \"../../redux/auth-reducer\";\r\n\r\nconst HeaderContainer = props => {\r\n    return (\r\n        <Header {...props} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userAvatar: state.profileReducer.userAvatar,\r\n    isAuth: state.authReducer.isAuth,\r\n    login: state.authReducer.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(HeaderContainer);","export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = maxLength => {\r\n    return value => {\r\n        if (value.length > maxLength) {\r\n            return `Max length ${maxLength} simbols`\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport './LoginForm.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls\";\r\nimport {required} from \"../../utilities/Vaalidators\";\r\n\r\nconst LoginForm = props => {\r\n    const [toggle, changeToggle] = useState(true);\r\n\r\n    const handleToggleClick = () => {\r\n        changeToggle(!toggle)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"login-form__background\"/>\r\n            <form onSubmit={props.handleSubmit} className=\"login-form\">\r\n                <div className=\"login-form__wrapper\">\r\n                    <h2 className=\"login-form__sign\">Login to your account</h2>\r\n                    <div className=\"login-form__item\">\r\n                        <Field validate={[required]} component={Input} name=\"email\"\r\n                               className={props.error && props.error === \"Enter valid Email\" ? \"login-form__item-input-error\" : \"login-form__item-input\"}\r\n                               placeholder=\"Email\"/>\r\n                        {props.error && props.error === \"Enter valid Email\" ?\r\n                            <div className=\"login-form__item-error-email\">{props.error}</div> : null}\r\n                    </div>\r\n                    <div className=\"login-form__item\">\r\n                        <Field validate={[required]} component={Input} type=\"password\" name=\"password\"\r\n                               className=\"login-form__item-input\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div className=\"login-form__item login-form__checkbox-wrapper\">\r\n                        <Field component={Input} name=\"rememberMe\" id=\"rememberMe\" className=\"login-form__item-checkbox\"\r\n                               type=\"checkbox\"/><label onClick={handleToggleClick}\r\n                                                       className={toggle ? \"login-form__item-label\" : \"login-form__item-label--checked\"}\r\n                                                       htmlFor=\"rememberMe\"> Remember me</label>\r\n                    </div>\r\n                    {props.error && props.error !== \"Enter valid Email\" ?\r\n                        <div className=\"login-form__item-error\">{props.error}</div> : null}\r\n                    <div className=\"login-form__item\">\r\n                        <button className=\"btn login-form__item-btn\">Login</button>\r\n                    </div>\r\n                    <p>or</p>\r\n                    <div className=\"login-form__item\">\r\n                        <a href=\"https://social-network.samuraijs.com/login\"\r\n                           className=\"btn login-form__item-btn login-form__item-btn-sign-up\">Sign up</a>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport './Login.css';\r\nimport LoginResuxForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk, logoutThunk} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = props => {\r\n    const onSubmit = (event) => {\r\n        props.loginThunk(event.email, event.password, event.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginResuxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    loginThunk,\r\n    logoutThunk,\r\n})(Login)","import {authMeRequestThunk} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nconst initislState = {\r\n    initialized: false,\r\n};\r\n\r\nexport const appReducer = (state = initislState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        const promise = dispatch(authMeRequestThunk());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess());\r\n            });\r\n    };\r\n};","import React from 'react';\nimport './App.css';\nimport {Route, withRouter} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport FindUsersContainer from \"./components/FindUsers/FindUsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => <Dialogs/>}/>\n                    <Route path='/find-users' render={() => <FindUsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialized: state.appReducer.initialized,\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n        initializeApp,\n    })\n)(App);\n\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {findUsersReducer} from \"./findUsersReducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    findUsersReducer: findUsersReducer,\r\n    authReducer: authReducer,\r\n    form: formReducer,\r\n    appReducer: appReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}